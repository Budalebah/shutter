{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "configContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "keyper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "numVotes",
          "type": "uint64"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "configContract",
      "outputs": [
        {
          "internalType": "contract ConfigContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "getBestKey",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "getBestKeyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "getBestKeyNumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "getNumVotes",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "keyper",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "keyperIndex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "startBatchIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/ConfigContract.sol",
    "5": "contracts/KeyBroadcastContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/KeyBroadcastContract.sol",
    "exportedSymbols": {
      "BatchConfig": [282],
      "ConfigContract": [1528],
      "KeyBroadcastContract": [3071]
    },
    "id": 3072,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2800,
        "literals": ["solidity", "=", "0.8", ".4"],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "contracts/ConfigContract.sol",
        "file": "./ConfigContract.sol",
        "id": 2803,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3072,
        "sourceUnit": 1529,
        "src": "58:65:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2801,
              "name": "ConfigContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:14:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2802,
              "name": "BatchConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "82:11:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2804,
          "nodeType": "StructuredDocumentation",
          "src": "125:354:5",
          "text": "@title A contract that keypers can use to vote on eon public keys. For each eon public key\n     generated, the keypers are expected to submit one vote. The contract logs the number of\n     votes so that users can only pick keys once they have reached votes from enough keypers\n     and thus have confidence that the key is actually correct."
        },
        "fullyImplemented": true,
        "id": 3071,
        "linearizedBaseContracts": [3071],
        "name": "KeyBroadcastContract",
        "nameLocation": "488:20:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2805,
              "nodeType": "StructuredDocumentation",
              "src": "515:405:5",
              "text": "@notice The event emitted when a keyper voted on an eon key.\n @param keyper The address of the keyper who sent the vote.\n @param startBatchIndex The index of the first batch for which the key should be used.\n @param key The eon public key for which the keyper voted.\n @param numVotes The number of keypers (including this one) who have voted for the key so\n     far."
            },
            "id": 2815,
            "name": "Voted",
            "nameLocation": "931:5:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2807,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "keyper",
                  "nameLocation": "962:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2815,
                  "src": "946:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2809,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nameLocation": "985:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2815,
                  "src": "978:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2808,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2811,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "1016:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2815,
                  "src": "1010:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2810,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2813,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numVotes",
                  "nameLocation": "1036:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2815,
                  "src": "1029:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2812,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "936:114:5"
            },
            "src": "925:126:5"
          },
          {
            "constant": false,
            "functionSelector": "bf66a182",
            "id": 2818,
            "mutability": "mutable",
            "name": "configContract",
            "nameLocation": "1079:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 3071,
            "src": "1057:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ConfigContract_$1528",
              "typeString": "contract ConfigContract"
            },
            "typeName": {
              "id": 2817,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2816,
                "name": "ConfigContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1528,
                "src": "1057:14:5"
              },
              "referencedDeclaration": 1528,
              "src": "1057:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigContract_$1528",
                "typeString": "contract ConfigContract"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2824,
            "mutability": "mutable",
            "name": "_voted",
            "nameLocation": "1151:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 3071,
            "src": "1099:58:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint64 => mapping(address => bool))"
            },
            "typeName": {
              "id": 2823,
              "keyType": {
                "id": 2819,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1107:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1099:43:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint64 => mapping(address => bool))"
              },
              "valueType": {
                "id": 2822,
                "keyType": {
                  "id": 2820,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1125:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1117:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2821,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1136:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2830,
            "mutability": "mutable",
            "name": "_numVotes",
            "nameLocation": "1264:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 3071,
            "src": "1210:63:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
              "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
            },
            "typeName": {
              "id": 2829,
              "keyType": {
                "id": 2825,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1218:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1210:45:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
              },
              "valueType": {
                "id": 2828,
                "keyType": {
                  "id": 2826,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1236:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1228:26:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                  "typeString": "mapping(bytes32 => uint64)"
                },
                "valueType": {
                  "id": 2827,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1247:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2834,
            "mutability": "mutable",
            "name": "_keys",
            "nameLocation": "1365:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 3071,
            "src": "1331:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
              "typeString": "mapping(bytes32 => bytes)"
            },
            "typeName": {
              "id": 2833,
              "keyType": {
                "id": 2831,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1339:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1331:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                "typeString": "mapping(bytes32 => bytes)"
              },
              "valueType": {
                "id": 2832,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "1350:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2838,
            "mutability": "mutable",
            "name": "_bestKeyHashes",
            "nameLocation": "1431:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 3071,
            "src": "1396:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
              "typeString": "mapping(uint64 => bytes32)"
            },
            "typeName": {
              "id": 2837,
              "keyType": {
                "id": 2835,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1404:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1396:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                "typeString": "mapping(uint64 => bytes32)"
              },
              "valueType": {
                "id": 2836,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1414:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2842,
            "mutability": "mutable",
            "name": "_bestKeyNumVotes",
            "nameLocation": "1485:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 3071,
            "src": "1451:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
              "typeString": "mapping(uint64 => uint64)"
            },
            "typeName": {
              "id": 2841,
              "keyType": {
                "id": 2839,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1459:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1451:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                "typeString": "mapping(uint64 => uint64)"
              },
              "valueType": {
                "id": 2840,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1469:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2853,
              "nodeType": "Block",
              "src": "1551:71:5",
              "statements": [
                {
                  "expression": {
                    "id": 2851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2847,
                      "name": "configContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2818,
                      "src": "1561:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConfigContract_$1528",
                        "typeString": "contract ConfigContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2849,
                          "name": "configContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2844,
                          "src": "1593:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2848,
                        "name": "ConfigContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "1578:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConfigContract_$1528_$",
                          "typeString": "type(contract ConfigContract)"
                        }
                      },
                      "id": 2850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1578:37:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConfigContract_$1528",
                        "typeString": "contract ConfigContract"
                      }
                    },
                    "src": "1561:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConfigContract_$1528",
                      "typeString": "contract ConfigContract"
                    }
                  },
                  "id": 2852,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:54:5"
                }
              ]
            },
            "id": 2854,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2844,
                  "mutability": "mutable",
                  "name": "configContractAddress",
                  "nameLocation": "1528:21:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2854,
                  "src": "1520:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:31:5"
            },
            "returnParameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1551:0:5"
            },
            "scope": 3071,
            "src": "1508:114:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2997,
              "nodeType": "Block",
              "src": "2149:1482:5",
              "statements": [
                {
                  "assignments": [2865],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2865,
                      "mutability": "mutable",
                      "name": "configIndex",
                      "nameLocation": "2166:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2997,
                      "src": "2159:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 2864,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2159:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2870,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2868,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "2232:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 2866,
                        "name": "configContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2818,
                        "src": "2192:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigContract_$1528",
                          "typeString": "contract ConfigContract"
                        }
                      },
                      "id": 2867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configIndexForBatchIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 469,
                      "src": "2192:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$returns$_t_uint64_$",
                        "typeString": "function (uint64) view external returns (uint64)"
                      }
                    },
                    "id": 2869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2159:89:5"
                },
                {
                  "assignments": [2872],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2872,
                      "mutability": "mutable",
                      "name": "batchSpan",
                      "nameLocation": "2265:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2997,
                      "src": "2258:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 2871,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2258:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2877,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2875,
                        "name": "configIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2865,
                        "src": "2308:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 2873,
                        "name": "configContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2818,
                        "src": "2277:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigContract_$1528",
                          "typeString": "contract ConfigContract"
                        }
                      },
                      "id": 2874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configBatchSpan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 636,
                      "src": "2277:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$returns$_t_uint64_$",
                        "typeString": "function (uint64) view external returns (uint64)"
                      }
                    },
                    "id": 2876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2277:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2258:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 2881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2879,
                          "name": "batchSpan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2872,
                          "src": "2339:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2351:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2339:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a20636f6e66696720697320696e616374697665",
                        "id": 2882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2354:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bd37009dc848abc0a0f5eca7c98618ebd36a6f4b202ff47fb223acba204fdc2",
                          "typeString": "literal_string \"KeyBroadcastContract: config is inactive\""
                        },
                        "value": "KeyBroadcastContract: config is inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bd37009dc848abc0a0f5eca7c98618ebd36a6f4b202ff47fb223acba204fdc2",
                          "typeString": "literal_string \"KeyBroadcastContract: config is inactive\""
                        }
                      ],
                      "id": 2878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2331:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:66:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2884,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:66:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 2891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2886,
                          "name": "keyperIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2857,
                          "src": "2429:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2889,
                              "name": "configIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2865,
                              "src": "2475:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 2887,
                              "name": "configContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2818,
                              "src": "2443:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigContract_$1528",
                                "typeString": "contract ConfigContract"
                              }
                            },
                            "id": 2888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "configNumKeypers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 552,
                            "src": "2443:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint64_$returns$_t_uint64_$",
                              "typeString": "function (uint64) view external returns (uint64)"
                            }
                          },
                          "id": 2890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2443:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "2429:58:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a206b657970657220696e646578206f7574206f662072616e6765",
                        "id": 2892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2501:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b10ee3318143f87f4c7bf90e8335232a742ac0a1eefa875e8b99bb7e05c7b9ff",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper index out of range\""
                        },
                        "value": "KeyBroadcastContract: keyper index out of range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b10ee3318143f87f4c7bf90e8335232a742ac0a1eefa875e8b99bb7e05c7b9ff",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper index out of range\""
                        }
                      ],
                      "id": 2885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2408:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2408:152:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2894,
                  "nodeType": "ExpressionStatement",
                  "src": "2408:152:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2896,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2591:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2591:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2900,
                              "name": "configIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2865,
                              "src": "2650:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 2901,
                              "name": "keyperIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2857,
                              "src": "2663:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 2898,
                              "name": "configContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2818,
                              "src": "2621:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigContract_$1528",
                                "typeString": "contract ConfigContract"
                              }
                            },
                            "id": 2899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "configKeypers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 527,
                            "src": "2621:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint64_$_t_uint64_$returns$_t_address_$",
                              "typeString": "function (uint64,uint64) view external returns (address)"
                            }
                          },
                          "id": 2902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2621:54:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2591:84:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a2073656e646572206973206e6f74206b6579706572",
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2689:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62655d914d7be6fc6ce28c1362285d278f4640b225d1b63f20c16508c9c58f6b",
                          "typeString": "literal_string \"KeyBroadcastContract: sender is not keyper\""
                        },
                        "value": "KeyBroadcastContract: sender is not keyper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62655d914d7be6fc6ce28c1362285d278f4640b225d1b63f20c16508c9c58f6b",
                          "typeString": "literal_string \"KeyBroadcastContract: sender is not keyper\""
                        }
                      ],
                      "id": 2895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2570:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:173:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2906,
                  "nodeType": "ExpressionStatement",
                  "src": "2570:173:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2775:36:5",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2908,
                              "name": "_voted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2824,
                              "src": "2776:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint64 => mapping(address => bool))"
                              }
                            },
                            "id": 2910,
                            "indexExpression": {
                              "id": 2909,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2859,
                              "src": "2783:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2776:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2913,
                          "indexExpression": {
                            "expression": {
                              "id": 2911,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2800:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2800:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2776:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b657942726f616463617374436f6e74726163743a206b65797065722068617320616c726561647920766f746564",
                        "id": 2915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2825:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f055cc4f0e51e560f2954ddcce0e3630267ccbac82963be9388374c3be26bb25",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper has already voted\""
                        },
                        "value": "KeyBroadcastContract: keyper has already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f055cc4f0e51e560f2954ddcce0e3630267ccbac82963be9388374c3be26bb25",
                          "typeString": "literal_string \"KeyBroadcastContract: keyper has already voted\""
                        }
                      ],
                      "id": 2907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2754:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:129:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2917,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:129:5"
                },
                {
                  "assignments": [2919],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2919,
                      "mutability": "mutable",
                      "name": "keyHash",
                      "nameLocation": "2902:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2997,
                      "src": "2894:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2918,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2894:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2923,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2921,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "2922:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2920,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2912:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2912:14:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2894:32:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2924,
                            "name": "_keys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2834,
                            "src": "2986:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                              "typeString": "mapping(bytes32 => bytes storage ref)"
                            }
                          },
                          "id": 2926,
                          "indexExpression": {
                            "id": 2925,
                            "name": "keyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2919,
                            "src": "2992:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2986:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 2927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2986:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3011:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2986:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2930,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2861,
                          "src": "3016:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3016:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3030:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3016:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2986:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2942,
                  "nodeType": "IfStatement",
                  "src": "2982:96:5",
                  "trueBody": {
                    "id": 2941,
                    "nodeType": "Block",
                    "src": "3033:45:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2935,
                              "name": "_keys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2834,
                              "src": "3047:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                                "typeString": "mapping(bytes32 => bytes storage ref)"
                              }
                            },
                            "id": 2937,
                            "indexExpression": {
                              "id": 2936,
                              "name": "keyHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2919,
                              "src": "3053:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3047:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2938,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2861,
                            "src": "3064:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "3047:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 2940,
                        "nodeType": "ExpressionStatement",
                        "src": "3047:20:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [2944],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2944,
                      "mutability": "mutable",
                      "name": "numVotes",
                      "nameLocation": "3117:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 2997,
                      "src": "3110:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 2943,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3110:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2952,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2945,
                          "name": "_numVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2830,
                          "src": "3128:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                            "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                          }
                        },
                        "id": 2947,
                        "indexExpression": {
                          "id": 2946,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2859,
                          "src": "3138:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3128:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                          "typeString": "mapping(bytes32 => uint64)"
                        }
                      },
                      "id": 2949,
                      "indexExpression": {
                        "id": 2948,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2919,
                        "src": "3155:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3128:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3166:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3128:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3110:57:5"
                },
                {
                  "expression": {
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2953,
                          "name": "_voted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2824,
                          "src": "3177:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint64 => mapping(address => bool))"
                          }
                        },
                        "id": 2957,
                        "indexExpression": {
                          "id": 2954,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2859,
                          "src": "3184:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3177:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2958,
                      "indexExpression": {
                        "expression": {
                          "id": 2955,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3201:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3201:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3177:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3215:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3177:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2961,
                  "nodeType": "ExpressionStatement",
                  "src": "3177:42:5"
                },
                {
                  "expression": {
                    "id": 2968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2962,
                          "name": "_numVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2830,
                          "src": "3229:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                            "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                          }
                        },
                        "id": 2965,
                        "indexExpression": {
                          "id": 2963,
                          "name": "startBatchIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2859,
                          "src": "3239:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3229:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                          "typeString": "mapping(bytes32 => uint64)"
                        }
                      },
                      "id": 2966,
                      "indexExpression": {
                        "id": 2964,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2919,
                        "src": "3256:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3229:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2967,
                      "name": "numVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2944,
                      "src": "3267:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3229:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2969,
                  "nodeType": "ExpressionStatement",
                  "src": "3229:46:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 2974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2970,
                      "name": "numVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2944,
                      "src": "3290:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2971,
                        "name": "_bestKeyNumVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2842,
                        "src": "3301:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                          "typeString": "mapping(uint64 => uint64)"
                        }
                      },
                      "id": 2973,
                      "indexExpression": {
                        "id": 2972,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "3318:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3301:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3290:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2988,
                  "nodeType": "IfStatement",
                  "src": "3286:174:5",
                  "trueBody": {
                    "id": 2987,
                    "nodeType": "Block",
                    "src": "3336:124:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 2979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2975,
                              "name": "_bestKeyNumVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2842,
                              "src": "3350:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                                "typeString": "mapping(uint64 => uint64)"
                              }
                            },
                            "id": 2977,
                            "indexExpression": {
                              "id": 2976,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2859,
                              "src": "3367:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3350:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2978,
                            "name": "numVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2944,
                            "src": "3386:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3350:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 2980,
                        "nodeType": "ExpressionStatement",
                        "src": "3350:44:5"
                      },
                      {
                        "expression": {
                          "id": 2985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2981,
                              "name": "_bestKeyHashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2838,
                              "src": "3408:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                                "typeString": "mapping(uint64 => bytes32)"
                              }
                            },
                            "id": 2983,
                            "indexExpression": {
                              "id": 2982,
                              "name": "startBatchIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2859,
                              "src": "3423:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3408:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2984,
                            "name": "keyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2919,
                            "src": "3442:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3408:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2986,
                        "nodeType": "ExpressionStatement",
                        "src": "3408:41:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2990,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3503:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3503:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2992,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "3544:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 2993,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "3578:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 2994,
                        "name": "numVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2944,
                        "src": "3605:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 2989,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2815,
                      "src": "3475:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64,bytes memory,uint64)"
                      }
                    },
                    "id": 2995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["keyper", "startBatchIndex", "key", "numVotes"],
                    "nodeType": "FunctionCall",
                    "src": "3475:149:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2996,
                  "nodeType": "EmitStatement",
                  "src": "3470:154:5"
                }
              ]
            },
            "documentation": {
              "id": 2855,
              "nodeType": "StructuredDocumentation",
              "src": "1628:403:5",
              "text": "@notice Submit a vote.\n @notice Can only be called by keypers defined in the config responsible for\n     `startBatchIndex`, and only once per `startBatchIndex`.\n @param keyperIndex The index of the calling keyper in the batch config.\n @param startBatchIndex The index of the first batch for which the key should be used.\n @param key The eon public key to vote for."
            },
            "functionSelector": "6b32c795",
            "id": 2998,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2045:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2857,
                  "mutability": "mutable",
                  "name": "keyperIndex",
                  "nameLocation": "2066:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "2059:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2856,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2059:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2859,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nameLocation": "2094:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "2087:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2858,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2861,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "2132:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "2119:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2860,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2049:92:5"
            },
            "returnParameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2149:0:5"
            },
            "scope": 3071,
            "src": "2036:1595:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3013,
              "nodeType": "Block",
              "src": "3750:55:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3007,
                        "name": "_voted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2824,
                        "src": "3767:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(uint64 => mapping(address => bool))"
                        }
                      },
                      "id": 3009,
                      "indexExpression": {
                        "id": 3008,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3002,
                        "src": "3774:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3767:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3011,
                    "indexExpression": {
                      "id": 3010,
                      "name": "keyper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3000,
                      "src": "3791:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3767:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3006,
                  "id": 3012,
                  "nodeType": "Return",
                  "src": "3760:38:5"
                }
              ]
            },
            "functionSelector": "cf1d7a0a",
            "id": 3014,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasVoted",
            "nameLocation": "3646:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3000,
                  "mutability": "mutable",
                  "name": "keyper",
                  "nameLocation": "3663:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3014,
                  "src": "3655:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3655:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3002,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nameLocation": "3678:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3014,
                  "src": "3671:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3001,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3671:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3654:40:5"
            },
            "returnParameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3005,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3014,
                  "src": "3740:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3740:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3739:6:5"
            },
            "scope": 3071,
            "src": "3637:168:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3031,
              "nodeType": "Block",
              "src": "3931:66:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3023,
                        "name": "_numVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2830,
                        "src": "3948:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_bytes32_$_t_uint64_$_$",
                          "typeString": "mapping(uint64 => mapping(bytes32 => uint64))"
                        }
                      },
                      "id": 3025,
                      "indexExpression": {
                        "id": 3024,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3016,
                        "src": "3958:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3948:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                        "typeString": "mapping(bytes32 => uint64)"
                      }
                    },
                    "id": 3029,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 3027,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3018,
                          "src": "3985:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3026,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3975:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3975:14:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3948:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 3022,
                  "id": 3030,
                  "nodeType": "Return",
                  "src": "3941:49:5"
                }
              ]
            },
            "functionSelector": "1845bf5c",
            "id": 3032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumVotes",
            "nameLocation": "3820:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3016,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nameLocation": "3839:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3032,
                  "src": "3832:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3015,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3018,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "3869:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3032,
                  "src": "3856:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3856:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3831:42:5"
            },
            "returnParameters": {
              "id": 3022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3021,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3032,
                  "src": "3919:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3919:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3918:8:5"
            },
            "scope": 3071,
            "src": "3811:186:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3043,
              "nodeType": "Block",
              "src": "4109:55:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3039,
                      "name": "_bestKeyHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2838,
                      "src": "4126:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                        "typeString": "mapping(uint64 => bytes32)"
                      }
                    },
                    "id": 3041,
                    "indexExpression": {
                      "id": 3040,
                      "name": "startBatchIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3034,
                      "src": "4141:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4126:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3038,
                  "id": 3042,
                  "nodeType": "Return",
                  "src": "4119:38:5"
                }
              ]
            },
            "functionSelector": "ab0a3ffe",
            "id": 3044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestKeyHash",
            "nameLocation": "4012:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3034,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nameLocation": "4034:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3044,
                  "src": "4027:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3033,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4027:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4026:24:5"
            },
            "returnParameters": {
              "id": 3038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3037,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3044,
                  "src": "4096:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4096:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4095:9:5"
            },
            "scope": 3071,
            "src": "4003:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3057,
              "nodeType": "Block",
              "src": "4277:62:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3051,
                      "name": "_keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2834,
                      "src": "4294:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                        "typeString": "mapping(bytes32 => bytes storage ref)"
                      }
                    },
                    "id": 3055,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 3052,
                        "name": "_bestKeyHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "4300:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_bytes32_$",
                          "typeString": "mapping(uint64 => bytes32)"
                        }
                      },
                      "id": 3054,
                      "indexExpression": {
                        "id": 3053,
                        "name": "startBatchIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3046,
                        "src": "4315:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4300:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4294:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 3050,
                  "id": 3056,
                  "nodeType": "Return",
                  "src": "4287:45:5"
                }
              ]
            },
            "functionSelector": "2553600e",
            "id": 3058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestKey",
            "nameLocation": "4179:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3046,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nameLocation": "4197:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3058,
                  "src": "4190:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3045,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4190:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4189:24:5"
            },
            "returnParameters": {
              "id": 3050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3058,
                  "src": "4259:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3048,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4258:14:5"
            },
            "scope": 3071,
            "src": "4170:169:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3069,
              "nodeType": "Block",
              "src": "4455:57:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3065,
                      "name": "_bestKeyNumVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2842,
                      "src": "4472:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                        "typeString": "mapping(uint64 => uint64)"
                      }
                    },
                    "id": 3067,
                    "indexExpression": {
                      "id": 3066,
                      "name": "startBatchIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3060,
                      "src": "4489:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4472:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 3064,
                  "id": 3068,
                  "nodeType": "Return",
                  "src": "4465:40:5"
                }
              ]
            },
            "functionSelector": "41ecda09",
            "id": 3070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestKeyNumVotes",
            "nameLocation": "4354:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3060,
                  "mutability": "mutable",
                  "name": "startBatchIndex",
                  "nameLocation": "4380:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "4373:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3059,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4372:24:5"
            },
            "returnParameters": {
              "id": 3064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3063,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "4442:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4442:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4441:9:5"
            },
            "scope": 3071,
            "src": "4345:167:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3072,
        "src": "479:4035:5",
        "usedErrors": []
      }
    ],
    "src": "33:4482:5"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610ca0380380610ca083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610c0f806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636b32c7951161005b5780636b32c79514610137578063ab0a3ffe1461014c578063bf66a18214610175578063cf1d7a0a146101a057600080fd5b80631845bf5c146100825780632553600e146100dd57806341ecda09146100fd575b600080fd5b6100c06100903660046109e4565b6001600160401b039182166000908152600260209081526040808320845194830194909420835292905220541690565b6040516001600160401b0390911681526020015b60405180910390f35b6100f06100eb3660046109ac565b6101f1565b6040516100d49190610adb565b61012961010b3660046109ac565b6001600160401b039081166000908152600560205260409020541690565b6040519081526020016100d4565b61014a610145366004610a31565b6102aa565b005b61012961015a3660046109ac565b6001600160401b031660009081526004602052604090205490565b600054610188906001600160a01b031681565b6040516001600160a01b0390911681526020016100d4565b6101e16101ae366004610974565b6001600160401b031660009081526001602090815260408083206001600160a01b03949094168352929052205460ff1690565b60405190151581526020016100d4565b6001600160401b03811660009081526004602090815260408083205483526003909152902080546060919061022590610b5b565b80601f016020809104026020016040519081016040528092919081815260200182805461025190610b5b565b801561029e5780601f106102735761010080835404028352916020019161029e565b820191906000526020600020905b81548152906001019060200180831161028157829003601f168201915b50505050509050919050565b60008054604051632e37abf360e21b81526001600160401b03851660048201526001600160a01b039091169063b8deafcc9060240160206040518083038186803b1580156102f757600080fd5b505afa15801561030b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032f91906109c8565b6000805460405163017109f560e31b81526001600160401b038416600482015292935090916001600160a01b0390911690630b884fa89060240160206040518083038186803b15801561038157600080fd5b505afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b991906109c8565b90506000816001600160401b03161161042a5760405162461bcd60e51b815260206004820152602860248201527f4b657942726f616463617374436f6e74726163743a20636f6e66696720697320604482015267696e61637469766560c01b60648201526084015b60405180910390fd5b60005460405163366963c960e21b81526001600160401b03841660048201526001600160a01b039091169063d9a58f249060240160206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae91906109c8565b6001600160401b0316856001600160401b0316106105265760405162461bcd60e51b815260206004820152602f60248201527f4b657942726f616463617374436f6e74726163743a206b657970657220696e6460448201526e6578206f7574206f662072616e676560881b6064820152608401610421565b600054604051637d42750160e11b81526001600160401b038085166004830152871660248201526001600160a01b039091169063fa84ea029060440160206040518083038186803b15801561057a57600080fd5b505afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b29190610951565b6001600160a01b0316336001600160a01b0316146106255760405162461bcd60e51b815260206004820152602a60248201527f4b657942726f616463617374436f6e74726163743a2073656e646572206973206044820152693737ba1035b2bcb832b960b11b6064820152608401610421565b6001600160401b038416600090815260016020908152604080832033845290915290205460ff16156106b05760405162461bcd60e51b815260206004820152602e60248201527f4b657942726f616463617374436f6e74726163743a206b65797065722068617360448201526d08185b1c9958591e481d9bdd195960921b6064820152608401610421565b825160208085019190912060008181526003909252604090912080546106d590610b5b565b15905080156106e2575060015b15610708576000818152600360209081526040909120855161070692870190610832565b505b6001600160401b038086166000908152600260209081526040808320858452909152812054909161073b91166001610b24565b6001600160401b0387811660008181526001602081815260408084203385528252808420805460ff1916909317909255838352600281528183208884528152818320805467ffffffffffffffff191687871690811790915593835260059052902054929350911610156107e4576001600160401b038681166000908152600560209081526040808320805467ffffffffffffffff19169486169490941790935560049052208290555b336001600160a01b03167f305124b6ec831bb4150eb1ddbd4e8cc4b95687b9a6258b110fd0e9865914b0bf87878460405161082193929190610aee565b60405180910390a250505050505050565b82805461083e90610b5b565b90600052602060002090601f01602090048101928261086057600085556108a6565b82601f1061087957805160ff19168380011785556108a6565b828001600101855582156108a6579182015b828111156108a657825182559160200191906001019061088b565b506108b29291506108b6565b5090565b5b808211156108b257600081556001016108b7565b600082601f8301126108db578081fd5b81356001600160401b03808211156108f5576108f5610b96565b604051601f8301601f19908116603f0116810190828211818310171561091d5761091d610b96565b81604052838152866020858801011115610935578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610962578081fd5b815161096d81610bac565b9392505050565b60008060408385031215610986578081fd5b823561099181610bac565b915060208301356109a181610bc4565b809150509250929050565b6000602082840312156109bd578081fd5b813561096d81610bc4565b6000602082840312156109d9578081fd5b815161096d81610bc4565b600080604083850312156109f6578182fd5b8235610a0181610bc4565b915060208301356001600160401b03811115610a1b578182fd5b610a27858286016108cb565b9150509250929050565b600080600060608486031215610a45578081fd5b8335610a5081610bc4565b92506020840135610a6081610bc4565b915060408401356001600160401b03811115610a7a578182fd5b610a86868287016108cb565b9150509250925092565b60008151808452815b81811015610ab557602081850181015186830182015201610a99565b81811115610ac65782602083870101525b50601f01601f19169290920160200192915050565b60208152600061096d6020830184610a90565b60006001600160401b03808616835260606020840152610b116060840186610a90565b9150808416604084015250949350505050565b60006001600160401b03808316818516808303821115610b5257634e487b7160e01b84526011600452602484fd5b01949350505050565b600181811c90821680610b6f57607f821691505b60208210811415610b9057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bc157600080fd5b50565b6001600160401b0381168114610bc157600080fdfea26469706673582212201f321858e1261d1225d21ec7793cc38d54062f75e6ead3c5501486cbca6c549564736f6c63430008040033",
  "bytecodeSha1": "7d3a6eb425f01f9bece3a4d4257150114ae8e804",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "KeyBroadcastContract",
  "coverageMap": {
    "branches": {
      "1": {},
      "5": {
        "KeyBroadcastContract.vote": {
          "15": [2339, 2352, true],
          "16": [2429, 2487, true],
          "17": [2591, 2675, true],
          "18": [2775, 2811, true],
          "19": [2986, 3012, false],
          "20": [3016, 3031, false]
        }
      }
    },
    "statements": {
      "1": {},
      "5": {
        "KeyBroadcastContract.getBestKey": {
          "4": [4287, 4332]
        },
        "KeyBroadcastContract.getBestKeyHash": {
          "2": [4119, 4157]
        },
        "KeyBroadcastContract.getBestKeyNumVotes": {
          "1": [4465, 4505]
        },
        "KeyBroadcastContract.getNumVotes": {
          "0": [3941, 3990]
        },
        "KeyBroadcastContract.hasVoted": {
          "3": [3760, 3798]
        },
        "KeyBroadcastContract.vote": {
          "5": [2331, 2397],
          "6": [2408, 2560],
          "7": [2570, 2743],
          "8": [2754, 2883],
          "9": [3047, 3067],
          "10": [3177, 3219],
          "11": [3229, 3275],
          "12": [3350, 3394],
          "13": [3408, 3449],
          "14": [3470, 3624]
        }
      }
    }
  },
  "dependencies": ["ConfigContract"],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80636b32c7951161005b5780636b32c79514610137578063ab0a3ffe1461014c578063bf66a18214610175578063cf1d7a0a146101a057600080fd5b80631845bf5c146100825780632553600e146100dd57806341ecda09146100fd575b600080fd5b6100c06100903660046109e4565b6001600160401b039182166000908152600260209081526040808320845194830194909420835292905220541690565b6040516001600160401b0390911681526020015b60405180910390f35b6100f06100eb3660046109ac565b6101f1565b6040516100d49190610adb565b61012961010b3660046109ac565b6001600160401b039081166000908152600560205260409020541690565b6040519081526020016100d4565b61014a610145366004610a31565b6102aa565b005b61012961015a3660046109ac565b6001600160401b031660009081526004602052604090205490565b600054610188906001600160a01b031681565b6040516001600160a01b0390911681526020016100d4565b6101e16101ae366004610974565b6001600160401b031660009081526001602090815260408083206001600160a01b03949094168352929052205460ff1690565b60405190151581526020016100d4565b6001600160401b03811660009081526004602090815260408083205483526003909152902080546060919061022590610b5b565b80601f016020809104026020016040519081016040528092919081815260200182805461025190610b5b565b801561029e5780601f106102735761010080835404028352916020019161029e565b820191906000526020600020905b81548152906001019060200180831161028157829003601f168201915b50505050509050919050565b60008054604051632e37abf360e21b81526001600160401b03851660048201526001600160a01b039091169063b8deafcc9060240160206040518083038186803b1580156102f757600080fd5b505afa15801561030b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032f91906109c8565b6000805460405163017109f560e31b81526001600160401b038416600482015292935090916001600160a01b0390911690630b884fa89060240160206040518083038186803b15801561038157600080fd5b505afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b991906109c8565b90506000816001600160401b03161161042a5760405162461bcd60e51b815260206004820152602860248201527f4b657942726f616463617374436f6e74726163743a20636f6e66696720697320604482015267696e61637469766560c01b60648201526084015b60405180910390fd5b60005460405163366963c960e21b81526001600160401b03841660048201526001600160a01b039091169063d9a58f249060240160206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae91906109c8565b6001600160401b0316856001600160401b0316106105265760405162461bcd60e51b815260206004820152602f60248201527f4b657942726f616463617374436f6e74726163743a206b657970657220696e6460448201526e6578206f7574206f662072616e676560881b6064820152608401610421565b600054604051637d42750160e11b81526001600160401b038085166004830152871660248201526001600160a01b039091169063fa84ea029060440160206040518083038186803b15801561057a57600080fd5b505afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b29190610951565b6001600160a01b0316336001600160a01b0316146106255760405162461bcd60e51b815260206004820152602a60248201527f4b657942726f616463617374436f6e74726163743a2073656e646572206973206044820152693737ba1035b2bcb832b960b11b6064820152608401610421565b6001600160401b038416600090815260016020908152604080832033845290915290205460ff16156106b05760405162461bcd60e51b815260206004820152602e60248201527f4b657942726f616463617374436f6e74726163743a206b65797065722068617360448201526d08185b1c9958591e481d9bdd195960921b6064820152608401610421565b825160208085019190912060008181526003909252604090912080546106d590610b5b565b15905080156106e2575060015b15610708576000818152600360209081526040909120855161070692870190610832565b505b6001600160401b038086166000908152600260209081526040808320858452909152812054909161073b91166001610b24565b6001600160401b0387811660008181526001602081815260408084203385528252808420805460ff1916909317909255838352600281528183208884528152818320805467ffffffffffffffff191687871690811790915593835260059052902054929350911610156107e4576001600160401b038681166000908152600560209081526040808320805467ffffffffffffffff19169486169490941790935560049052208290555b336001600160a01b03167f305124b6ec831bb4150eb1ddbd4e8cc4b95687b9a6258b110fd0e9865914b0bf87878460405161082193929190610aee565b60405180910390a250505050505050565b82805461083e90610b5b565b90600052602060002090601f01602090048101928261086057600085556108a6565b82601f1061087957805160ff19168380011785556108a6565b828001600101855582156108a6579182015b828111156108a657825182559160200191906001019061088b565b506108b29291506108b6565b5090565b5b808211156108b257600081556001016108b7565b600082601f8301126108db578081fd5b81356001600160401b03808211156108f5576108f5610b96565b604051601f8301601f19908116603f0116810190828211818310171561091d5761091d610b96565b81604052838152866020858801011115610935578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610962578081fd5b815161096d81610bac565b9392505050565b60008060408385031215610986578081fd5b823561099181610bac565b915060208301356109a181610bc4565b809150509250929050565b6000602082840312156109bd578081fd5b813561096d81610bc4565b6000602082840312156109d9578081fd5b815161096d81610bc4565b600080604083850312156109f6578182fd5b8235610a0181610bc4565b915060208301356001600160401b03811115610a1b578182fd5b610a27858286016108cb565b9150509250929050565b600080600060608486031215610a45578081fd5b8335610a5081610bc4565b92506020840135610a6081610bc4565b915060408401356001600160401b03811115610a7a578182fd5b610a86868287016108cb565b9150509250925092565b60008151808452815b81811015610ab557602081850181015186830182015201610a99565b81811115610ac65782602083870101525b50601f01601f19169290920160200192915050565b60208152600061096d6020830184610a90565b60006001600160401b03808616835260606020840152610b116060840186610a90565b9150808416604084015250949350505050565b60006001600160401b03808316818516808303821115610b5257634e487b7160e01b84526011600452602484fd5b01949350505050565b600181811c90821680610b6f57607f821691505b60208210811415610b9057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bc157600080fd5b50565b6001600160401b0381168114610bc157600080fdfea26469706673582212201f321858e1261d1225d21ec7793cc38d54062f75e6ead3c5501486cbca6c549564736f6c63430008040033",
  "deployedSourceMap": "479:4035:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3811:186;;;;;;:::i;:::-;-1:-1:-1;;;;;3948:26:5;;;3919:6;3948:26;;;:9;:26;;;;;;;;3975:14;;;;;;;;;3948:42;;;;;;;;;3811:186;;;;-1:-1:-1;;;;;6345:31:23;;;6327:50;;6315:2;6300:18;3811:186:5;;;;;;;;4170:169;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4345:167::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4472:33:5;;;4442:7;4472:33;;;:16;:33;;;;;;;;4345:167;;;;3861:25:23;;;3849:2;3834:18;4345:167:5;3816:76:23;2036:1595:5;;;;;;:::i;:::-;;:::i;:::-;;4003:161;;;;;;:::i;:::-;-1:-1:-1;;;;;4126:31:5;4096:7;4126:31;;;:14;:31;;;;;;;4003:161;1057:36;;;;;-1:-1:-1;;;;;1057:36:5;;;;;;-1:-1:-1;;;;;4306:32:23;;;4288:51;;4276:2;4261:18;1057:36:5;4243:102:23;3637:168:5;;;;;;:::i;:::-;-1:-1:-1;;;;;3767:23:5;3740:4;3767:23;;;:6;:23;;;;;;;;-1:-1:-1;;;;;3767:31:5;;;;;;;;;;;;;;3637:168;;;;3688:14:23;;3681:22;3663:41;;3651:2;3636:18;3637:168:5;3618:92:23;4170:169:5;-1:-1:-1;;;;;4300:31:5;;4294:38;4300:31;;;:14;:31;;;;;;;;;4294:38;;:5;:38;;;;;4287:45;;4259:12;;4294:38;4287:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4170:169;;;:::o;2036:1595::-;2159:18;2192:14;;:56;;-1:-1:-1;;;2192:56:5;;-1:-1:-1;;;;;6345:31:23;;2192:56:5;;;6327:50:23;-1:-1:-1;;;;;2192:14:5;;;;:39;;6300:18:23;;2192:56:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2258:16;2277:14;;:43;;-1:-1:-1;;;2277:43:5;;-1:-1:-1;;;;;6345:31:23;;2277:43:5;;;6327:50:23;2159:89:5;;-1:-1:-1;2258:16:5;;-1:-1:-1;;;;;2277:14:5;;;;:30;;6300:18:23;;2277:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2258:62;;2351:1;2339:9;-1:-1:-1;;;;;2339:13:5;;2331:66;;;;-1:-1:-1;;;2331:66:5;;4552:2:23;2331:66:5;;;4534:21:23;4591:2;4571:18;;;4564:30;4630:34;4610:18;;;4603:62;-1:-1:-1;;;4681:18:23;;;4674:38;4729:19;;2331:66:5;;;;;;;;;2443:14;;:44;;-1:-1:-1;;;2443:44:5;;-1:-1:-1;;;;;6345:31:23;;2443:44:5;;;6327:50:23;-1:-1:-1;;;;;2443:14:5;;;;:31;;6300:18:23;;2443:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2429:58:5;:11;-1:-1:-1;;;;;2429:58:5;;2408:152;;;;-1:-1:-1;;;2408:152:5;;5372:2:23;2408:152:5;;;5354:21:23;5411:2;5391:18;;;5384:30;5450:34;5430:18;;;5423:62;-1:-1:-1;;;5501:18:23;;;5494:45;5556:19;;2408:152:5;5344:237:23;2408:152:5;2621:14;;:54;;-1:-1:-1;;;2621:54:5;;-1:-1:-1;;;;;7028:15:23;;;2621:54:5;;;7010:34:23;7080:15;;7060:18;;;7053:43;-1:-1:-1;;;;;2621:14:5;;;;:28;;6946:18:23;;2621:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2591:84:5;:10;-1:-1:-1;;;;;2591:84:5;;2570:173;;;;-1:-1:-1;;;2570:173:5;;4961:2:23;2570:173:5;;;4943:21:23;5000:2;4980:18;;;4973:30;5039:34;5019:18;;;5012:62;-1:-1:-1;;;5090:18:23;;;5083:40;5140:19;;2570:173:5;4933:232:23;2570:173:5;-1:-1:-1;;;;;2776:23:5;;;;;;:6;:23;;;;;;;;2800:10;2776:35;;;;;;;;;;2775:36;2754:129;;;;-1:-1:-1;;;2754:129:5;;5788:2:23;2754:129:5;;;5770:21:23;5827:2;5807:18;;;5800:30;5866:34;5846:18;;;5839:62;-1:-1:-1;;;5917:18:23;;;5910:44;5971:19;;2754:129:5;5760:236:23;2754:129:5;2912:14;;;;;;;;;;2894:15;2986:14;;;:5;:14;;;;;;;:21;;;;;:::i;:::-;:26;;-1:-1:-1;2986:45:5;;;;-1:-1:-1;3016:15:5;2986:45;2982:96;;;3047:14;;;;:5;:14;;;;;;;;:20;;;;;;;;:::i;:::-;;2982:96;-1:-1:-1;;;;;3128:26:5;;;3110:15;3128:26;;;:9;:26;;;;;;;;:35;;;;;;;;;3110:15;;3128:39;;:35;;:39;:::i;:::-;-1:-1:-1;;;;;3177:23:5;;;;;;;3215:4;3177:23;;;;;;;;3201:10;3177:35;;;;;;;:42;;-1:-1:-1;;3177:42:5;;;;;;;3229:26;;;:9;:26;;;;;:35;;;;;;;;:46;;-1:-1:-1;;3229:46:5;;;;;;;;;;3301:33;;;:16;:33;;;;;3229:46;;-1:-1:-1;3301:33:5;;-1:-1:-1;3286:174:5;;;-1:-1:-1;;;;;3350:33:5;;;;;;;:16;:33;;;;;;;;:44;;-1:-1:-1;;3350:44:5;;;;;;;;;;;3408:14;:31;;;:41;;;3286:174;3503:10;-1:-1:-1;;;;;3475:149:5;;3544:15;3578:3;3605:8;3475:149;;;;;;;;:::i;:::-;;;;;;;;2036:1595;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:738:23;56:5;109:3;102:4;94:6;90:17;86:27;76:2;;131:5;124;117:20;76:2;171:6;158:20;-1:-1:-1;;;;;234:2:23;230;227:10;224:2;;;240:18;;:::i;:::-;315:2;309:9;283:2;369:13;;-1:-1:-1;;365:22:23;;;389:2;361:31;357:40;345:53;;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;499:10;495:2;488:22;534:2;526:6;519:18;580:3;573:4;568:2;560:6;556:15;552:26;549:35;546:2;;;601:5;594;587:20;546:2;669;662:4;654:6;650:17;643:4;635:6;631:17;618:54;692:15;;;709:4;688:26;681:41;;;;-1:-1:-1;696:6:23;66:686;-1:-1:-1;;;66:686:23:o;757:261::-;827:6;880:2;868:9;859:7;855:23;851:32;848:2;;;901:6;893;886:22;848:2;938:9;932:16;957:31;982:5;957:31;:::i;:::-;1007:5;838:180;-1:-1:-1;;;838:180:23:o;1023:396::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:2;;;1172:6;1164;1157:22;1119:2;1216:9;1203:23;1235:31;1260:5;1235:31;:::i;:::-;1285:5;-1:-1:-1;1342:2:23;1327:18;;1314:32;1355;1314;1355;:::i;:::-;1406:7;1396:17;;;1109:310;;;;;:::o;1424:255::-;1482:6;1535:2;1523:9;1514:7;1510:23;1506:32;1503:2;;;1556:6;1548;1541:22;1503:2;1600:9;1587:23;1619:30;1643:5;1619:30;:::i;1684:259::-;1753:6;1806:2;1794:9;1785:7;1781:23;1777:32;1774:2;;;1827:6;1819;1812:22;1774:2;1864:9;1858:16;1883:30;1907:5;1883:30;:::i;1948:473::-;2024:6;2032;2085:2;2073:9;2064:7;2060:23;2056:32;2053:2;;;2106:6;2098;2091:22;2053:2;2150:9;2137:23;2169:30;2193:5;2169:30;:::i;:::-;2218:5;-1:-1:-1;2274:2:23;2259:18;;2246:32;-1:-1:-1;;;;;2290:30:23;;2287:2;;;2338:6;2330;2323:22;2287:2;2366:49;2407:7;2398:6;2387:9;2383:22;2366:49;:::i;:::-;2356:59;;;2043:378;;;;;:::o;2426:612::-;2510:6;2518;2526;2579:2;2567:9;2558:7;2554:23;2550:32;2547:2;;;2600:6;2592;2585:22;2547:2;2644:9;2631:23;2663:30;2687:5;2663:30;:::i;:::-;2712:5;-1:-1:-1;2769:2:23;2754:18;;2741:32;2782;2741;2782;:::i;:::-;2833:7;-1:-1:-1;2891:2:23;2876:18;;2863:32;-1:-1:-1;;;;;2907:30:23;;2904:2;;;2955:6;2947;2940:22;2904:2;2983:49;3024:7;3015:6;3004:9;3000:22;2983:49;:::i;:::-;2973:59;;;2537:501;;;;;:::o;3043:475::-;3084:3;3122:5;3116:12;3149:6;3144:3;3137:19;3174:3;3186:162;3200:6;3197:1;3194:13;3186:162;;;3262:4;3318:13;;;3314:22;;3308:29;3290:11;;;3286:20;;3279:59;3215:12;3186:162;;;3366:6;3363:1;3360:13;3357:2;;;3432:3;3425:4;3416:6;3411:3;3407:16;3403:27;3396:40;3357:2;-1:-1:-1;3500:2:23;3479:15;-1:-1:-1;;3475:29:23;3466:39;;;;3507:4;3462:50;;3092:426;-1:-1:-1;;3092:426:23:o;3897:217::-;4044:2;4033:9;4026:21;4007:4;4064:44;4104:2;4093:9;4089:18;4081:6;4064:44;:::i;6388:410::-;6550:4;-1:-1:-1;;;;;6636:2:23;6628:6;6624:15;6613:9;6606:34;6676:2;6671;6660:9;6656:18;6649:30;6696:44;6736:2;6725:9;6721:18;6713:6;6696:44;:::i;:::-;6688:52;;6788:2;6780:6;6776:15;6771:2;6760:9;6756:18;6749:43;;6559:239;;;;;;:::o;7107:337::-;7146:3;-1:-1:-1;;;;;7219:2:23;7216:1;7212:10;7249:2;7246:1;7242:10;7280:3;7276:2;7272:12;7267:3;7264:21;7261:2;;;-1:-1:-1;;;7308:33:23;;7364:4;7361:1;7354:15;7394:4;7315:3;7382:17;7261:2;7425:13;;7154:290;-1:-1:-1;;;;7154:290:23:o;7449:380::-;7528:1;7524:12;;;;7571;;;7592:2;;7646:4;7638:6;7634:17;7624:27;;7592:2;7699;7691:6;7688:14;7668:18;7665:38;7662:2;;;7745:10;7740:3;7736:20;7733:1;7726:31;7780:4;7777:1;7770:15;7808:4;7805:1;7798:15;7662:2;;7504:325;;;:::o;7834:127::-;7895:10;7890:3;7886:20;7883:1;7876:31;7926:4;7923:1;7916:15;7950:4;7947:1;7940:15;7966:131;-1:-1:-1;;;;;8041:31:23;;8031:42;;8021:2;;8087:1;8084;8077:12;8021:2;8011:86;:::o;8102:129::-;-1:-1:-1;;;;;8180:5:23;8176:30;8169:5;8166:41;8156:2;;8221:1;8218;8211:12",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Voted(address,uint64,bytes,uint64)": {
        "params": {
          "key": "The eon public key for which the keyper voted.",
          "keyper": "The address of the keyper who sent the vote.",
          "numVotes": "The number of keypers (including this one) who have voted for the key so     far.",
          "startBatchIndex": "The index of the first batch for which the key should be used."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "vote(uint64,uint64,bytes)": {
        "notice": "Submit a vote.Can only be called by keypers defined in the config responsible for     `startBatchIndex`, and only once per `startBatchIndex`.",
        "params": {
          "key": "The eon public key to vote for.",
          "keyperIndex": "The index of the calling keyper in the batch config.",
          "startBatchIndex": "The index of the first batch for which the key should be used."
        }
      }
    },
    "title": "A contract that keypers can use to vote on eon public keys. For each eon public key     generated, the keypers are expected to submit one vote. The contract logs the number of     votes so that users can only pick keys once they have reached votes from enough keypers     and thus have confidence that the key is actually correct.",
    "version": 1
  },
  "offset": [479, 4514],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B32C795 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6B32C795 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xAB0A3FFE EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xBF66A182 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xCF1D7A0A EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1845BF5C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2553600E EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x41ECDA09 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 KECCAK256 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x9AC JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH2 0x129 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x188 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x225 SWAP1 PUSH2 0xB5B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x251 SWAP1 PUSH2 0xB5B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x273 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x281 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E37ABF3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB8DEAFCC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17109F5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB884FA8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A20636F6E66696720697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x696E616374697665 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x366963C9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD9A58F24 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A206B657970657220696E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6578206F7574206F662072616E6765 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x421 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7D427501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xFA84EA02 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A2073656E64657220697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3737BA1035B2BCB832B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x421 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B657942726F616463617374436F6E74726163743A206B657970657220686173 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x8185B1C9958591E481D9BDD1959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x421 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH2 0x6D5 SWAP1 PUSH2 0xB5B JUMP JUMPDEST ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x6E2 JUMPI POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH2 0x706 SWAP3 DUP8 ADD SWAP1 PUSH2 0x832 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x73B SWAP2 AND PUSH1 0x1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP4 DUP4 MSTORE PUSH1 0x2 DUP2 MSTORE DUP2 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP2 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP8 DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x5 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 AND LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x305124B6EC831BB4150EB1DDBD4E8CC4B95687B9A6258B110FD0E9865914B0BF DUP8 DUP8 DUP5 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x83E SWAP1 PUSH2 0xB5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x860 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x8A6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x879 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x8A6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x8A6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x8A6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x88B JUMP JUMPDEST POP PUSH2 0x8B2 SWAP3 SWAP2 POP PUSH2 0x8B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x8F5 JUMPI PUSH2 0x8F5 PUSH2 0xB96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x91D JUMPI PUSH2 0x91D PUSH2 0xB96 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x935 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x962 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x96D DUP2 PUSH2 0xBAC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x986 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x991 DUP2 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x9A1 DUP2 PUSH2 0xBC4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x96D DUP2 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x96D DUP2 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xA01 DUP2 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA1B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA27 DUP6 DUP3 DUP7 ADD PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA45 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xA50 DUP2 PUSH2 0xBC4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xA60 DUP2 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA7A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA86 DUP7 DUP3 DUP8 ADD PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xA99 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAC6 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x96D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP7 AND DUP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xB11 PUSH1 0x60 DUP5 ADD DUP7 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP DUP1 DUP5 AND PUSH1 0x40 DUP5 ADD MSTORE POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0xB52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB6F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F ORIGIN XOR PC 0xE1 0x26 SAR SLT 0x25 0xD2 0x1E 0xC7 PUSH26 0x3CC38D54062F75E6EAD3C5501486CBCA6C549564736F6C634300 ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [479, 4514],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [479, 4514],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [479, 4514],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [479, 4514],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [479, 4514],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [479, 4514],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [479, 4514],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [479, 4514],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [479, 4514],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [479, 4514],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6B32C795"
    },
    "38": {
      "fn": null,
      "offset": [479, 4514],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6B32C795"
    },
    "49": {
      "fn": null,
      "offset": [479, 4514],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0x137"
    },
    "53": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH4",
      "path": "5",
      "value": "0xAB0A3FFE"
    },
    "60": {
      "fn": null,
      "offset": [479, 4514],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C"
    },
    "64": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBF66A182"
    },
    "71": {
      "fn": null,
      "offset": [479, 4514],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0x175"
    },
    "75": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCF1D7A0A"
    },
    "82": {
      "fn": null,
      "offset": [479, 4514],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A0"
    },
    "86": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "90": {
      "fn": null,
      "offset": [479, 4514],
      "op": "REVERT",
      "path": "5"
    },
    "91": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPDEST",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "93": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1845BF5C"
    },
    "98": {
      "fn": null,
      "offset": [479, 4514],
      "op": "EQ",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2553600E"
    },
    "109": {
      "fn": null,
      "offset": [479, 4514],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD"
    },
    "113": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH4",
      "path": "5",
      "value": "0x41ECDA09"
    },
    "120": {
      "fn": null,
      "offset": [479, 4514],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFD"
    },
    "124": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [479, 4514],
      "op": "JUMPDEST",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [479, 4514],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [479, 4514],
      "op": "DUP1",
      "path": "5"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [479, 4514],
      "op": "REVERT",
      "path": "5"
    },
    "130": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "JUMPDEST",
      "path": "5"
    },
    "131": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC0"
    },
    "134": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90"
    },
    "137": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "138": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "140": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E4"
    },
    "143": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "jump": "i",
      "offset": [3811, 3997],
      "op": "JUMP",
      "path": "5"
    },
    "144": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "JUMPDEST",
      "path": "5"
    },
    "145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "151": {
      "op": "SHL"
    },
    "152": {
      "op": "SUB"
    },
    "153": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "SWAP2",
      "path": "5",
      "statement": 0
    },
    "154": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "DUP3",
      "path": "5"
    },
    "155": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "AND",
      "path": "5"
    },
    "156": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3919, 3925],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "158": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "SWAP1",
      "path": "5"
    },
    "159": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "DUP2",
      "path": "5"
    },
    "160": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "MSTORE",
      "path": "5"
    },
    "161": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3957],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "163": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "165": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "SWAP1",
      "path": "5"
    },
    "166": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "DUP2",
      "path": "5"
    },
    "167": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "MSTORE",
      "path": "5"
    },
    "168": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "170": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "DUP1",
      "path": "5"
    },
    "171": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "DUP4",
      "path": "5"
    },
    "172": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3974],
      "op": "KECCAK256",
      "path": "5"
    },
    "173": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "DUP5",
      "path": "5"
    },
    "174": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "MLOAD",
      "path": "5"
    },
    "175": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "SWAP5",
      "path": "5"
    },
    "176": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "DUP4",
      "path": "5"
    },
    "177": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "ADD",
      "path": "5"
    },
    "178": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "SWAP5",
      "path": "5"
    },
    "179": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "SWAP1",
      "path": "5"
    },
    "180": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "SWAP5",
      "path": "5"
    },
    "181": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3975, 3989],
      "op": "KECCAK256",
      "path": "5"
    },
    "182": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "DUP4",
      "path": "5"
    },
    "183": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "MSTORE",
      "path": "5"
    },
    "184": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "SWAP3",
      "path": "5"
    },
    "185": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "SWAP1",
      "path": "5"
    },
    "186": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "MSTORE",
      "path": "5"
    },
    "187": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "KECCAK256",
      "path": "5"
    },
    "188": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "SLOAD",
      "path": "5"
    },
    "189": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "AND",
      "path": "5"
    },
    "190": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3948, 3990],
      "op": "SWAP1",
      "path": "5"
    },
    "191": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "JUMP",
      "path": "5"
    },
    "192": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "JUMPDEST",
      "path": "5"
    },
    "193": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "195": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "MLOAD",
      "path": "5"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "202": {
      "op": "SHL"
    },
    "203": {
      "op": "SUB"
    },
    "204": {
      "op": "SWAP1"
    },
    "205": {
      "op": "SWAP2"
    },
    "206": {
      "op": "AND"
    },
    "207": {
      "op": "DUP2"
    },
    "208": {
      "op": "MSTORE"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "211": {
      "op": "ADD"
    },
    "212": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "JUMPDEST",
      "path": "5"
    },
    "213": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "215": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "MLOAD",
      "path": "5"
    },
    "216": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "DUP1",
      "path": "5"
    },
    "217": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "SWAP2",
      "path": "5"
    },
    "218": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "SUB",
      "path": "5"
    },
    "219": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "SWAP1",
      "path": "5"
    },
    "220": {
      "fn": "KeyBroadcastContract.getNumVotes",
      "offset": [3811, 3997],
      "op": "RETURN",
      "path": "5"
    },
    "221": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "JUMPDEST",
      "path": "5"
    },
    "222": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF0"
    },
    "225": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEB"
    },
    "228": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "229": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "231": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AC"
    },
    "234": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4170, 4339],
      "op": "JUMP",
      "path": "5"
    },
    "235": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "JUMPDEST",
      "path": "5"
    },
    "236": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F1"
    },
    "239": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4170, 4339],
      "op": "JUMP",
      "path": "5"
    },
    "240": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "JUMPDEST",
      "path": "5"
    },
    "241": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "243": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "MLOAD",
      "path": "5"
    },
    "244": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4"
    },
    "247": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "SWAP2",
      "path": "5"
    },
    "248": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "SWAP1",
      "path": "5"
    },
    "249": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "PUSH2",
      "path": "5",
      "value": "0xADB"
    },
    "252": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4170, 4339],
      "op": "JUMP",
      "path": "5"
    },
    "253": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "JUMPDEST",
      "path": "5"
    },
    "254": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "PUSH2",
      "path": "5",
      "value": "0x129"
    },
    "257": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B"
    },
    "260": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "261": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "263": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AC"
    },
    "266": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "jump": "i",
      "offset": [4345, 4512],
      "op": "JUMP",
      "path": "5"
    },
    "267": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "JUMPDEST",
      "path": "5"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "op": "SUB"
    },
    "276": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "SWAP1",
      "path": "5",
      "statement": 1
    },
    "277": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "DUP2",
      "path": "5"
    },
    "278": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "AND",
      "path": "5"
    },
    "279": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4442, 4449],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "281": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "SWAP1",
      "path": "5"
    },
    "282": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "DUP2",
      "path": "5"
    },
    "283": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "MSTORE",
      "path": "5"
    },
    "284": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4488],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "286": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "288": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "MSTORE",
      "path": "5"
    },
    "289": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "291": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "SWAP1",
      "path": "5"
    },
    "292": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "KECCAK256",
      "path": "5"
    },
    "293": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "SLOAD",
      "path": "5"
    },
    "294": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "AND",
      "path": "5"
    },
    "295": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4472, 4505],
      "op": "SWAP1",
      "path": "5"
    },
    "296": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "JUMP",
      "path": "5"
    },
    "297": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "JUMPDEST",
      "path": "5"
    },
    "298": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "300": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "MLOAD",
      "path": "5"
    },
    "301": {
      "op": "SWAP1"
    },
    "302": {
      "op": "DUP2"
    },
    "303": {
      "op": "MSTORE"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "306": {
      "op": "ADD"
    },
    "307": {
      "fn": "KeyBroadcastContract.getBestKeyNumVotes",
      "offset": [4345, 4512],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4"
    },
    "310": {
      "op": "JUMP"
    },
    "311": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "JUMPDEST",
      "path": "5"
    },
    "312": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14A"
    },
    "315": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "PUSH2",
      "path": "5",
      "value": "0x145"
    },
    "318": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "319": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "321": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA31"
    },
    "324": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2036, 3631],
      "op": "JUMP",
      "path": "5"
    },
    "325": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "JUMPDEST",
      "path": "5"
    },
    "326": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AA"
    },
    "329": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2036, 3631],
      "op": "JUMP",
      "path": "5"
    },
    "330": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "JUMPDEST",
      "path": "5"
    },
    "331": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "STOP",
      "path": "5"
    },
    "332": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4003, 4164],
      "op": "JUMPDEST",
      "path": "5"
    },
    "333": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4003, 4164],
      "op": "PUSH2",
      "path": "5",
      "value": "0x129"
    },
    "336": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4003, 4164],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A"
    },
    "339": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4003, 4164],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "340": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4003, 4164],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "342": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4003, 4164],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AC"
    },
    "345": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "jump": "i",
      "offset": [4003, 4164],
      "op": "JUMP",
      "path": "5"
    },
    "346": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4003, 4164],
      "op": "JUMPDEST",
      "path": "5"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "353": {
      "op": "SHL"
    },
    "354": {
      "op": "SUB"
    },
    "355": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "AND",
      "path": "5",
      "statement": 2
    },
    "356": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4096, 4103],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "358": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "SWAP1",
      "path": "5"
    },
    "359": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "DUP2",
      "path": "5"
    },
    "360": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "MSTORE",
      "path": "5"
    },
    "361": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4140],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "363": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "365": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "MSTORE",
      "path": "5"
    },
    "366": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "368": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "SWAP1",
      "path": "5"
    },
    "369": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "KECCAK256",
      "path": "5"
    },
    "370": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "SLOAD",
      "path": "5"
    },
    "371": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4126, 4157],
      "op": "SWAP1",
      "path": "5"
    },
    "372": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [4003, 4164],
      "op": "JUMP",
      "path": "5"
    },
    "373": {
      "offset": [1057, 1093],
      "op": "JUMPDEST",
      "path": "5"
    },
    "374": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "376": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "SLOAD",
      "path": "5"
    },
    "377": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "PUSH2",
      "path": "5",
      "value": "0x188"
    },
    "380": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "SWAP1",
      "path": "5"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "387": {
      "op": "SHL"
    },
    "388": {
      "op": "SUB"
    },
    "389": {
      "offset": [1057, 1093],
      "op": "AND",
      "path": "5"
    },
    "390": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "DUP2",
      "path": "5"
    },
    "391": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "JUMP",
      "path": "5"
    },
    "392": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "JUMPDEST",
      "path": "5"
    },
    "393": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "395": {
      "fn": "KeyBroadcastContract.getBestKeyHash",
      "offset": [1057, 1093],
      "op": "MLOAD",
      "path": "5"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "op": "SWAP1"
    },
    "405": {
      "op": "SWAP2"
    },
    "406": {
      "op": "AND"
    },
    "407": {
      "op": "DUP2"
    },
    "408": {
      "op": "MSTORE"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "ADD"
    },
    "412": {
      "offset": [1057, 1093],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4"
    },
    "415": {
      "op": "JUMP"
    },
    "416": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "JUMPDEST",
      "path": "5"
    },
    "417": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E1"
    },
    "420": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AE"
    },
    "423": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "424": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "426": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "PUSH2",
      "path": "5",
      "value": "0x974"
    },
    "429": {
      "fn": "KeyBroadcastContract.hasVoted",
      "jump": "i",
      "offset": [3637, 3805],
      "op": "JUMP",
      "path": "5"
    },
    "430": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "JUMPDEST",
      "path": "5"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "op": "SUB"
    },
    "439": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "AND",
      "path": "5",
      "statement": 3
    },
    "440": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3740, 3744],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "442": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "SWAP1",
      "path": "5"
    },
    "443": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "DUP2",
      "path": "5"
    },
    "444": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "MSTORE",
      "path": "5"
    },
    "445": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3773],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "447": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "449": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "SWAP1",
      "path": "5"
    },
    "450": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "DUP2",
      "path": "5"
    },
    "451": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "MSTORE",
      "path": "5"
    },
    "452": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "454": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "DUP1",
      "path": "5"
    },
    "455": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "DUP4",
      "path": "5"
    },
    "456": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3790],
      "op": "KECCAK256",
      "path": "5"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "463": {
      "op": "SHL"
    },
    "464": {
      "op": "SUB"
    },
    "465": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "SWAP5",
      "path": "5"
    },
    "466": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "SWAP1",
      "path": "5"
    },
    "467": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "SWAP5",
      "path": "5"
    },
    "468": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "AND",
      "path": "5"
    },
    "469": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "DUP4",
      "path": "5"
    },
    "470": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "MSTORE",
      "path": "5"
    },
    "471": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "SWAP3",
      "path": "5"
    },
    "472": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "SWAP1",
      "path": "5"
    },
    "473": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "MSTORE",
      "path": "5"
    },
    "474": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "KECCAK256",
      "path": "5"
    },
    "475": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "SLOAD",
      "path": "5"
    },
    "476": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "478": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "AND",
      "path": "5"
    },
    "479": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3767, 3798],
      "op": "SWAP1",
      "path": "5"
    },
    "480": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "JUMP",
      "path": "5"
    },
    "481": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "JUMPDEST",
      "path": "5"
    },
    "482": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "484": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "MLOAD",
      "path": "5"
    },
    "485": {
      "op": "SWAP1"
    },
    "486": {
      "op": "ISZERO"
    },
    "487": {
      "op": "ISZERO"
    },
    "488": {
      "op": "DUP2"
    },
    "489": {
      "op": "MSTORE"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "492": {
      "op": "ADD"
    },
    "493": {
      "fn": "KeyBroadcastContract.hasVoted",
      "offset": [3637, 3805],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4"
    },
    "496": {
      "op": "JUMP"
    },
    "497": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "JUMPDEST",
      "path": "5"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "504": {
      "op": "SHL"
    },
    "505": {
      "op": "SUB"
    },
    "506": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "DUP2",
      "path": "5",
      "statement": 4
    },
    "507": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "AND",
      "path": "5"
    },
    "508": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "510": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "SWAP1",
      "path": "5"
    },
    "511": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "DUP2",
      "path": "5"
    },
    "512": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "MSTORE",
      "path": "5"
    },
    "513": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4314],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "515": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "517": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "SWAP1",
      "path": "5"
    },
    "518": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "DUP2",
      "path": "5"
    },
    "519": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "MSTORE",
      "path": "5"
    },
    "520": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "522": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "DUP1",
      "path": "5"
    },
    "523": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "DUP4",
      "path": "5"
    },
    "524": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "KECCAK256",
      "path": "5"
    },
    "525": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4300, 4331],
      "op": "SLOAD",
      "path": "5"
    },
    "526": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "DUP4",
      "path": "5"
    },
    "527": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "MSTORE",
      "path": "5"
    },
    "528": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4299],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "530": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "531": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "SWAP2",
      "path": "5"
    },
    "532": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "MSTORE",
      "path": "5"
    },
    "533": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "534": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "KECCAK256",
      "path": "5"
    },
    "535": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "536": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SLOAD",
      "path": "5"
    },
    "537": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4259, 4271],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "539": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4259, 4271],
      "op": "SWAP2",
      "path": "5"
    },
    "540": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4294, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "541": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0x225"
    },
    "544": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "545": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5B"
    },
    "548": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4287, 4332],
      "op": "JUMP",
      "path": "5"
    },
    "549": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMPDEST",
      "path": "5"
    },
    "550": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "551": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "553": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "554": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "556": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "557": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP2",
      "path": "5"
    },
    "558": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DIV",
      "path": "5"
    },
    "559": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "MUL",
      "path": "5"
    },
    "560": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "562": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "563": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "565": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "MLOAD",
      "path": "5"
    },
    "566": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "567": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP2",
      "path": "5"
    },
    "568": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "569": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "571": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "MSTORE",
      "path": "5"
    },
    "572": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "573": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP3",
      "path": "5"
    },
    "574": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP2",
      "path": "5"
    },
    "575": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "576": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP2",
      "path": "5"
    },
    "577": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP2",
      "path": "5"
    },
    "578": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "MSTORE",
      "path": "5"
    },
    "579": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "581": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "582": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP3",
      "path": "5"
    },
    "583": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "584": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SLOAD",
      "path": "5"
    },
    "585": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0x251"
    },
    "588": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "589": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5B"
    },
    "592": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "i",
      "offset": [4287, 4332],
      "op": "JUMP",
      "path": "5"
    },
    "593": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMPDEST",
      "path": "5"
    },
    "594": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "595": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ISZERO",
      "path": "5"
    },
    "596": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29E"
    },
    "599": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMPI",
      "path": "5"
    },
    "600": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "601": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "603": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "LT",
      "path": "5"
    },
    "604": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0x273"
    },
    "607": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMPI",
      "path": "5"
    },
    "608": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "611": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "612": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP4",
      "path": "5"
    },
    "613": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SLOAD",
      "path": "5"
    },
    "614": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DIV",
      "path": "5"
    },
    "615": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "MUL",
      "path": "5"
    },
    "616": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP4",
      "path": "5"
    },
    "617": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "MSTORE",
      "path": "5"
    },
    "618": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP2",
      "path": "5"
    },
    "619": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "621": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "622": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP2",
      "path": "5"
    },
    "623": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29E"
    },
    "626": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMP",
      "path": "5"
    },
    "627": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMPDEST",
      "path": "5"
    },
    "628": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP3",
      "path": "5"
    },
    "629": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "630": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP2",
      "path": "5"
    },
    "631": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "632": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "634": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "MSTORE",
      "path": "5"
    },
    "635": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "637": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "639": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "KECCAK256",
      "path": "5"
    },
    "640": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "641": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMPDEST",
      "path": "5"
    },
    "642": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP2",
      "path": "5"
    },
    "643": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SLOAD",
      "path": "5"
    },
    "644": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP2",
      "path": "5"
    },
    "645": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "MSTORE",
      "path": "5"
    },
    "646": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "647": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "649": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "650": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "651": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "653": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "654": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP1",
      "path": "5"
    },
    "655": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP4",
      "path": "5"
    },
    "656": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "GT",
      "path": "5"
    },
    "657": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH2",
      "path": "5",
      "value": "0x281"
    },
    "660": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMPI",
      "path": "5"
    },
    "661": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP3",
      "path": "5"
    },
    "662": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "663": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SUB",
      "path": "5"
    },
    "664": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "666": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "AND",
      "path": "5"
    },
    "667": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "DUP3",
      "path": "5"
    },
    "668": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "ADD",
      "path": "5"
    },
    "669": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP2",
      "path": "5"
    },
    "670": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "JUMPDEST",
      "path": "5"
    },
    "671": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "POP",
      "path": "5"
    },
    "672": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "POP",
      "path": "5"
    },
    "673": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "POP",
      "path": "5"
    },
    "674": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "POP",
      "path": "5"
    },
    "675": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "POP",
      "path": "5"
    },
    "676": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "SWAP1",
      "path": "5"
    },
    "677": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4287, 4332],
      "op": "POP",
      "path": "5"
    },
    "678": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "SWAP2",
      "path": "5"
    },
    "679": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "SWAP1",
      "path": "5"
    },
    "680": {
      "fn": "KeyBroadcastContract.getBestKey",
      "offset": [4170, 4339],
      "op": "POP",
      "path": "5"
    },
    "681": {
      "fn": "KeyBroadcastContract.getBestKey",
      "jump": "o",
      "offset": [4170, 4339],
      "op": "JUMP",
      "path": "5"
    },
    "682": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "JUMPDEST",
      "path": "5"
    },
    "683": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2159, 2177],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "685": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2206],
      "op": "DUP1",
      "path": "5"
    },
    "686": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2206],
      "op": "SLOAD",
      "path": "5"
    },
    "687": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "689": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "MLOAD",
      "path": "5"
    },
    "690": {
      "op": "PUSH4",
      "value": "0x2E37ABF3"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP2",
      "path": "5"
    },
    "699": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "MSTORE",
      "path": "5"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "706": {
      "op": "SHL"
    },
    "707": {
      "op": "SUB"
    },
    "708": {
      "op": "DUP6"
    },
    "709": {
      "op": "AND"
    },
    "710": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "712": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP3",
      "path": "5"
    },
    "713": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "ADD",
      "path": "5"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "721": {
      "op": "SHL"
    },
    "722": {
      "op": "SUB"
    },
    "723": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2206],
      "op": "SWAP1",
      "path": "5"
    },
    "724": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2206],
      "op": "SWAP2",
      "path": "5"
    },
    "725": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2206],
      "op": "AND",
      "path": "5"
    },
    "726": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2206],
      "op": "SWAP1",
      "path": "5"
    },
    "727": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2231],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB8DEAFCC"
    },
    "732": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2231],
      "op": "SWAP1",
      "path": "5"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "738": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "740": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "MLOAD",
      "path": "5"
    },
    "741": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP1",
      "path": "5"
    },
    "742": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP4",
      "path": "5"
    },
    "743": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "SUB",
      "path": "5"
    },
    "744": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP2",
      "path": "5"
    },
    "745": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP7",
      "path": "5"
    },
    "746": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP1",
      "path": "5"
    },
    "747": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "748": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "ISZERO",
      "path": "5"
    },
    "749": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP1",
      "path": "5"
    },
    "750": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "ISZERO",
      "path": "5"
    },
    "751": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F7"
    },
    "754": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "JUMPI",
      "path": "5"
    },
    "755": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "757": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP1",
      "path": "5"
    },
    "758": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "REVERT",
      "path": "5"
    },
    "759": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "JUMPDEST",
      "path": "5"
    },
    "760": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "POP",
      "path": "5"
    },
    "761": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "GAS",
      "path": "5"
    },
    "762": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "STATICCALL",
      "path": "5"
    },
    "763": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "ISZERO",
      "path": "5"
    },
    "764": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP1",
      "path": "5"
    },
    "765": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "ISZERO",
      "path": "5"
    },
    "766": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30B"
    },
    "769": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "JUMPI",
      "path": "5"
    },
    "770": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "771": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "773": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP1",
      "path": "5"
    },
    "774": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "775": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "776": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "778": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "REVERT",
      "path": "5"
    },
    "779": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "JUMPDEST",
      "path": "5"
    },
    "780": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "POP",
      "path": "5"
    },
    "781": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "POP",
      "path": "5"
    },
    "782": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "POP",
      "path": "5"
    },
    "783": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "POP",
      "path": "5"
    },
    "784": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "786": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "MLOAD",
      "path": "5"
    },
    "787": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "788": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "790": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "NOT",
      "path": "5"
    },
    "791": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "793": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP3",
      "path": "5"
    },
    "794": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "ADD",
      "path": "5"
    },
    "795": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "AND",
      "path": "5"
    },
    "796": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP3",
      "path": "5"
    },
    "797": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "ADD",
      "path": "5"
    },
    "798": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP1",
      "path": "5"
    },
    "799": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "801": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "MSTORE",
      "path": "5"
    },
    "802": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "POP",
      "path": "5"
    },
    "803": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "DUP2",
      "path": "5"
    },
    "804": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "ADD",
      "path": "5"
    },
    "805": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "SWAP1",
      "path": "5"
    },
    "806": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32F"
    },
    "809": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "SWAP2",
      "path": "5"
    },
    "810": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "SWAP1",
      "path": "5"
    },
    "811": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C8"
    },
    "814": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2192, 2248],
      "op": "JUMP",
      "path": "5"
    },
    "815": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2192, 2248],
      "op": "JUMPDEST",
      "path": "5"
    },
    "816": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2274],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "818": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2291],
      "op": "DUP1",
      "path": "5"
    },
    "819": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2291],
      "op": "SLOAD",
      "path": "5"
    },
    "820": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "822": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "MLOAD",
      "path": "5"
    },
    "823": {
      "op": "PUSH4",
      "value": "0x17109F5"
    },
    "828": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "830": {
      "op": "SHL"
    },
    "831": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP2",
      "path": "5"
    },
    "832": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "MSTORE",
      "path": "5"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "op": "SUB"
    },
    "841": {
      "op": "DUP5"
    },
    "842": {
      "op": "AND"
    },
    "843": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "845": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP3",
      "path": "5"
    },
    "846": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "ADD",
      "path": "5"
    },
    "847": {
      "op": "MSTORE"
    },
    "848": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2159, 2248],
      "op": "SWAP3",
      "path": "5"
    },
    "849": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2159, 2248],
      "op": "SWAP4",
      "path": "5"
    },
    "850": {
      "op": "POP"
    },
    "851": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2274],
      "op": "SWAP1",
      "path": "5"
    },
    "852": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2274],
      "op": "SWAP2",
      "path": "5"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "op": "SUB"
    },
    "861": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2291],
      "op": "SWAP1",
      "path": "5"
    },
    "862": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2291],
      "op": "SWAP2",
      "path": "5"
    },
    "863": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2291],
      "op": "AND",
      "path": "5"
    },
    "864": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2291],
      "op": "SWAP1",
      "path": "5"
    },
    "865": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2307],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB884FA8"
    },
    "870": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2307],
      "op": "SWAP1",
      "path": "5"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "876": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "878": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "MLOAD",
      "path": "5"
    },
    "879": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP1",
      "path": "5"
    },
    "880": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP4",
      "path": "5"
    },
    "881": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "SUB",
      "path": "5"
    },
    "882": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP2",
      "path": "5"
    },
    "883": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP7",
      "path": "5"
    },
    "884": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP1",
      "path": "5"
    },
    "885": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "886": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "ISZERO",
      "path": "5"
    },
    "887": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP1",
      "path": "5"
    },
    "888": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "ISZERO",
      "path": "5"
    },
    "889": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH2",
      "path": "5",
      "value": "0x381"
    },
    "892": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "JUMPI",
      "path": "5"
    },
    "893": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "895": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP1",
      "path": "5"
    },
    "896": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "REVERT",
      "path": "5"
    },
    "897": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "JUMPDEST",
      "path": "5"
    },
    "898": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "POP",
      "path": "5"
    },
    "899": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "GAS",
      "path": "5"
    },
    "900": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "STATICCALL",
      "path": "5"
    },
    "901": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "ISZERO",
      "path": "5"
    },
    "902": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP1",
      "path": "5"
    },
    "903": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "ISZERO",
      "path": "5"
    },
    "904": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH2",
      "path": "5",
      "value": "0x395"
    },
    "907": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "JUMPI",
      "path": "5"
    },
    "908": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "909": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "911": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP1",
      "path": "5"
    },
    "912": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "913": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "914": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "916": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "REVERT",
      "path": "5"
    },
    "917": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "JUMPDEST",
      "path": "5"
    },
    "918": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "POP",
      "path": "5"
    },
    "919": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "POP",
      "path": "5"
    },
    "920": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "POP",
      "path": "5"
    },
    "921": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "POP",
      "path": "5"
    },
    "922": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "924": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "MLOAD",
      "path": "5"
    },
    "925": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "926": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "928": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "NOT",
      "path": "5"
    },
    "929": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "931": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP3",
      "path": "5"
    },
    "932": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "ADD",
      "path": "5"
    },
    "933": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "AND",
      "path": "5"
    },
    "934": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP3",
      "path": "5"
    },
    "935": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "ADD",
      "path": "5"
    },
    "936": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP1",
      "path": "5"
    },
    "937": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "939": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "MSTORE",
      "path": "5"
    },
    "940": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "POP",
      "path": "5"
    },
    "941": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "DUP2",
      "path": "5"
    },
    "942": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "ADD",
      "path": "5"
    },
    "943": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "SWAP1",
      "path": "5"
    },
    "944": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B9"
    },
    "947": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "SWAP2",
      "path": "5"
    },
    "948": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "SWAP1",
      "path": "5"
    },
    "949": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C8"
    },
    "952": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2277, 2320],
      "op": "JUMP",
      "path": "5"
    },
    "953": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2277, 2320],
      "op": "JUMPDEST",
      "path": "5"
    },
    "954": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2320],
      "op": "SWAP1",
      "path": "5"
    },
    "955": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2258, 2320],
      "op": "POP",
      "path": "5"
    },
    "956": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2351, 2352],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x0"
    },
    "958": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2339, 2348],
      "op": "DUP2",
      "path": "5"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2339, 2352],
      "op": "AND",
      "path": "5"
    },
    "968": {
      "branch": 15,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2339, 2352],
      "op": "GT",
      "path": "5"
    },
    "969": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "PUSH2",
      "path": "5",
      "value": "0x42A"
    },
    "972": {
      "branch": 15,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "JUMPI",
      "path": "5"
    },
    "973": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "975": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "MLOAD",
      "path": "5"
    },
    "976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "DUP2",
      "path": "5"
    },
    "984": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "MSTORE",
      "path": "5"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "987": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "989": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "DUP3",
      "path": "5"
    },
    "990": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "ADD",
      "path": "5"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A20636F6E66696720697320"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH8",
      "value": "0x696E616374697665"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1051": {
      "op": "DUP3"
    },
    "1052": {
      "op": "ADD"
    },
    "1053": {
      "op": "MSTORE"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1058": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1060": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "MLOAD",
      "path": "5"
    },
    "1061": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "DUP1",
      "path": "5"
    },
    "1062": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "SWAP2",
      "path": "5"
    },
    "1063": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "SUB",
      "path": "5"
    },
    "1064": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "SWAP1",
      "path": "5"
    },
    "1065": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "1066": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2331, 2397],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1067": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2457],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x0"
    },
    "1069": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2457],
      "op": "SLOAD",
      "path": "5"
    },
    "1070": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1072": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "MLOAD",
      "path": "5"
    },
    "1073": {
      "op": "PUSH4",
      "value": "0x366963C9"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP2",
      "path": "5"
    },
    "1082": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "MSTORE",
      "path": "5"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "op": "DUP5"
    },
    "1092": {
      "op": "AND"
    },
    "1093": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1095": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP3",
      "path": "5"
    },
    "1096": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "ADD",
      "path": "5"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1104": {
      "op": "SHL"
    },
    "1105": {
      "op": "SUB"
    },
    "1106": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2457],
      "op": "SWAP1",
      "path": "5"
    },
    "1107": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2457],
      "op": "SWAP2",
      "path": "5"
    },
    "1108": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2457],
      "op": "AND",
      "path": "5"
    },
    "1109": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2457],
      "op": "SWAP1",
      "path": "5"
    },
    "1110": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2474],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD9A58F24"
    },
    "1115": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2474],
      "op": "SWAP1",
      "path": "5"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1118": {
      "op": "ADD"
    },
    "1119": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1121": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1123": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "MLOAD",
      "path": "5"
    },
    "1124": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP1",
      "path": "5"
    },
    "1125": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP4",
      "path": "5"
    },
    "1126": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "SUB",
      "path": "5"
    },
    "1127": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP2",
      "path": "5"
    },
    "1128": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP7",
      "path": "5"
    },
    "1129": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP1",
      "path": "5"
    },
    "1130": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "1131": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "ISZERO",
      "path": "5"
    },
    "1132": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP1",
      "path": "5"
    },
    "1133": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "ISZERO",
      "path": "5"
    },
    "1134": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH2",
      "path": "5",
      "value": "0x476"
    },
    "1137": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "JUMPI",
      "path": "5"
    },
    "1138": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1140": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP1",
      "path": "5"
    },
    "1141": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "REVERT",
      "path": "5"
    },
    "1142": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1143": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "POP",
      "path": "5"
    },
    "1144": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "GAS",
      "path": "5"
    },
    "1145": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "STATICCALL",
      "path": "5"
    },
    "1146": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "ISZERO",
      "path": "5"
    },
    "1147": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP1",
      "path": "5"
    },
    "1148": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "ISZERO",
      "path": "5"
    },
    "1149": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH2",
      "path": "5",
      "value": "0x48A"
    },
    "1152": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "JUMPI",
      "path": "5"
    },
    "1153": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1154": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1156": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP1",
      "path": "5"
    },
    "1157": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1158": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1159": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1161": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "REVERT",
      "path": "5"
    },
    "1162": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1163": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "POP",
      "path": "5"
    },
    "1164": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "POP",
      "path": "5"
    },
    "1165": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "POP",
      "path": "5"
    },
    "1166": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "POP",
      "path": "5"
    },
    "1167": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1169": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "MLOAD",
      "path": "5"
    },
    "1170": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1171": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1173": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "NOT",
      "path": "5"
    },
    "1174": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1176": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP3",
      "path": "5"
    },
    "1177": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "ADD",
      "path": "5"
    },
    "1178": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "AND",
      "path": "5"
    },
    "1179": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP3",
      "path": "5"
    },
    "1180": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "ADD",
      "path": "5"
    },
    "1181": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP1",
      "path": "5"
    },
    "1182": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1184": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "MSTORE",
      "path": "5"
    },
    "1185": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "POP",
      "path": "5"
    },
    "1186": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "DUP2",
      "path": "5"
    },
    "1187": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "ADD",
      "path": "5"
    },
    "1188": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "SWAP1",
      "path": "5"
    },
    "1189": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AE"
    },
    "1192": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "SWAP2",
      "path": "5"
    },
    "1193": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "SWAP1",
      "path": "5"
    },
    "1194": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C8"
    },
    "1197": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2443, 2487],
      "op": "JUMP",
      "path": "5"
    },
    "1198": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2443, 2487],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1205": {
      "op": "SHL"
    },
    "1206": {
      "op": "SUB"
    },
    "1207": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2429, 2487],
      "op": "AND",
      "path": "5"
    },
    "1208": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2429, 2440],
      "op": "DUP6",
      "path": "5"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "op": "SUB"
    },
    "1217": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2429, 2487],
      "op": "AND",
      "path": "5"
    },
    "1218": {
      "branch": 16,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2429, 2487],
      "op": "LT",
      "path": "5"
    },
    "1219": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "PUSH2",
      "path": "5",
      "value": "0x526"
    },
    "1222": {
      "branch": 16,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "JUMPI",
      "path": "5"
    },
    "1223": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1225": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "MLOAD",
      "path": "5"
    },
    "1226": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1232": {
      "op": "SHL"
    },
    "1233": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "DUP2",
      "path": "5"
    },
    "1234": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "MSTORE",
      "path": "5"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1237": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1239": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "DUP3",
      "path": "5"
    },
    "1240": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "ADD",
      "path": "5"
    },
    "1241": {
      "op": "MSTORE"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1246": {
      "op": "DUP3"
    },
    "1247": {
      "op": "ADD"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A206B657970657220696E64"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1284": {
      "op": "DUP3"
    },
    "1285": {
      "op": "ADD"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "op": "PUSH15",
      "value": "0x6578206F7574206F662072616E6765"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1305": {
      "op": "SHL"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "PUSH2",
      "path": "5",
      "value": "0x421"
    },
    "1317": {
      "op": "JUMP"
    },
    "1318": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2408, 2560],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1319": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2635],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x0"
    },
    "1321": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2635],
      "op": "SLOAD",
      "path": "5"
    },
    "1322": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1324": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "MLOAD",
      "path": "5"
    },
    "1325": {
      "op": "PUSH4",
      "value": "0x7D427501"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP2",
      "path": "5"
    },
    "1334": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "MSTORE",
      "path": "5"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "op": "DUP1"
    },
    "1344": {
      "op": "DUP6"
    },
    "1345": {
      "op": "AND"
    },
    "1346": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1348": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP4",
      "path": "5"
    },
    "1349": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "ADD",
      "path": "5"
    },
    "1350": {
      "op": "MSTORE"
    },
    "1351": {
      "op": "DUP8"
    },
    "1352": {
      "op": "AND"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1355": {
      "op": "DUP3"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "MSTORE"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2635],
      "op": "SWAP1",
      "path": "5"
    },
    "1367": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2635],
      "op": "SWAP2",
      "path": "5"
    },
    "1368": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2635],
      "op": "AND",
      "path": "5"
    },
    "1369": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2635],
      "op": "SWAP1",
      "path": "5"
    },
    "1370": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2649],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFA84EA02"
    },
    "1375": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2649],
      "op": "SWAP1",
      "path": "5"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1378": {
      "op": "ADD"
    },
    "1379": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1381": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1383": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "MLOAD",
      "path": "5"
    },
    "1384": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP1",
      "path": "5"
    },
    "1385": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP4",
      "path": "5"
    },
    "1386": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "SUB",
      "path": "5"
    },
    "1387": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP2",
      "path": "5"
    },
    "1388": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP7",
      "path": "5"
    },
    "1389": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP1",
      "path": "5"
    },
    "1390": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "1391": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "ISZERO",
      "path": "5"
    },
    "1392": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP1",
      "path": "5"
    },
    "1393": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "ISZERO",
      "path": "5"
    },
    "1394": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH2",
      "path": "5",
      "value": "0x57A"
    },
    "1397": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "JUMPI",
      "path": "5"
    },
    "1398": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1400": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP1",
      "path": "5"
    },
    "1401": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "REVERT",
      "path": "5"
    },
    "1402": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1403": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "POP",
      "path": "5"
    },
    "1404": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "GAS",
      "path": "5"
    },
    "1405": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "STATICCALL",
      "path": "5"
    },
    "1406": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "ISZERO",
      "path": "5"
    },
    "1407": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP1",
      "path": "5"
    },
    "1408": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "ISZERO",
      "path": "5"
    },
    "1409": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH2",
      "path": "5",
      "value": "0x58E"
    },
    "1412": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "JUMPI",
      "path": "5"
    },
    "1413": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1414": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1416": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP1",
      "path": "5"
    },
    "1417": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1418": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1419": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1421": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "REVERT",
      "path": "5"
    },
    "1422": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1423": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "POP",
      "path": "5"
    },
    "1424": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "POP",
      "path": "5"
    },
    "1425": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "POP",
      "path": "5"
    },
    "1426": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "POP",
      "path": "5"
    },
    "1427": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1429": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "MLOAD",
      "path": "5"
    },
    "1430": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1431": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1433": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "NOT",
      "path": "5"
    },
    "1434": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1436": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP3",
      "path": "5"
    },
    "1437": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "ADD",
      "path": "5"
    },
    "1438": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "AND",
      "path": "5"
    },
    "1439": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP3",
      "path": "5"
    },
    "1440": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "ADD",
      "path": "5"
    },
    "1441": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP1",
      "path": "5"
    },
    "1442": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1444": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "MSTORE",
      "path": "5"
    },
    "1445": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "POP",
      "path": "5"
    },
    "1446": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "DUP2",
      "path": "5"
    },
    "1447": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "ADD",
      "path": "5"
    },
    "1448": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "SWAP1",
      "path": "5"
    },
    "1449": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B2"
    },
    "1452": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "SWAP2",
      "path": "5"
    },
    "1453": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "SWAP1",
      "path": "5"
    },
    "1454": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "PUSH2",
      "path": "5",
      "value": "0x951"
    },
    "1457": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2621, 2675],
      "op": "JUMP",
      "path": "5"
    },
    "1458": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2621, 2675],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2591, 2675],
      "op": "AND",
      "path": "5"
    },
    "1468": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2591, 2601],
      "op": "CALLER",
      "path": "5"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2591, 2675],
      "op": "AND",
      "path": "5"
    },
    "1478": {
      "branch": 17,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2591, 2675],
      "op": "EQ",
      "path": "5"
    },
    "1479": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "PUSH2",
      "path": "5",
      "value": "0x625"
    },
    "1482": {
      "branch": 17,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "JUMPI",
      "path": "5"
    },
    "1483": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1485": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "MLOAD",
      "path": "5"
    },
    "1486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "DUP2",
      "path": "5"
    },
    "1494": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "MSTORE",
      "path": "5"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1497": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1499": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "DUP3",
      "path": "5"
    },
    "1500": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "ADD",
      "path": "5"
    },
    "1501": {
      "op": "MSTORE"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1506": {
      "op": "DUP3"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "MSTORE"
    },
    "1509": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A2073656E64657220697320"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1544": {
      "op": "DUP3"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "op": "MSTORE"
    },
    "1547": {
      "op": "PUSH10",
      "value": "0x3737BA1035B2BCB832B9"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "1560": {
      "op": "SHL"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1568": {
      "op": "ADD"
    },
    "1569": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "PUSH2",
      "path": "5",
      "value": "0x421"
    },
    "1572": {
      "op": "JUMP"
    },
    "1573": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2570, 2743],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1580": {
      "op": "SHL"
    },
    "1581": {
      "op": "SUB"
    },
    "1582": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "DUP5",
      "path": "5",
      "statement": 8
    },
    "1583": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "AND",
      "path": "5"
    },
    "1584": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1586": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "SWAP1",
      "path": "5"
    },
    "1587": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "DUP2",
      "path": "5"
    },
    "1588": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "MSTORE",
      "path": "5"
    },
    "1589": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2782],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1591": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1593": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "SWAP1",
      "path": "5"
    },
    "1594": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "DUP2",
      "path": "5"
    },
    "1595": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "MSTORE",
      "path": "5"
    },
    "1596": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1598": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "DUP1",
      "path": "5"
    },
    "1599": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "DUP4",
      "path": "5"
    },
    "1600": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2799],
      "op": "KECCAK256",
      "path": "5"
    },
    "1601": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2800, 2810],
      "op": "CALLER",
      "path": "5"
    },
    "1602": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "DUP5",
      "path": "5"
    },
    "1603": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "MSTORE",
      "path": "5"
    },
    "1604": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "SWAP1",
      "path": "5"
    },
    "1605": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "SWAP2",
      "path": "5"
    },
    "1606": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "MSTORE",
      "path": "5"
    },
    "1607": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "SWAP1",
      "path": "5"
    },
    "1608": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "KECCAK256",
      "path": "5"
    },
    "1609": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "SLOAD",
      "path": "5"
    },
    "1610": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1612": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2776, 2811],
      "op": "AND",
      "path": "5"
    },
    "1613": {
      "branch": 18,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2775, 2811],
      "op": "ISZERO",
      "path": "5"
    },
    "1614": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B0"
    },
    "1617": {
      "branch": 18,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "JUMPI",
      "path": "5"
    },
    "1618": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1620": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "MLOAD",
      "path": "5"
    },
    "1621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "DUP2",
      "path": "5"
    },
    "1629": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "MSTORE",
      "path": "5"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1632": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1634": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "DUP3",
      "path": "5"
    },
    "1635": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "ADD",
      "path": "5"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1641": {
      "op": "DUP3"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "op": "PUSH32",
      "value": "0x4B657942726F616463617374436F6E74726163743A206B657970657220686173"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1679": {
      "op": "DUP3"
    },
    "1680": {
      "op": "ADD"
    },
    "1681": {
      "op": "MSTORE"
    },
    "1682": {
      "op": "PUSH14",
      "value": "0x8185B1C9958591E481D9BDD1959"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1702": {
      "op": "DUP3"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1707": {
      "op": "ADD"
    },
    "1708": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "PUSH2",
      "path": "5",
      "value": "0x421"
    },
    "1711": {
      "op": "JUMP"
    },
    "1712": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2754, 2883],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1713": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "DUP3",
      "path": "5"
    },
    "1714": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "MLOAD",
      "path": "5"
    },
    "1715": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1717": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "DUP1",
      "path": "5"
    },
    "1718": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "DUP6",
      "path": "5"
    },
    "1719": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "ADD",
      "path": "5"
    },
    "1720": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "SWAP2",
      "path": "5"
    },
    "1721": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "SWAP1",
      "path": "5"
    },
    "1722": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "SWAP2",
      "path": "5"
    },
    "1723": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2912, 2926],
      "op": "KECCAK256",
      "path": "5"
    },
    "1724": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2894, 2909],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1726": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "DUP2",
      "path": "5"
    },
    "1727": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "DUP2",
      "path": "5"
    },
    "1728": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "MSTORE",
      "path": "5"
    },
    "1729": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 2991],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1731": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "SWAP1",
      "path": "5"
    },
    "1732": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "SWAP3",
      "path": "5"
    },
    "1733": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "MSTORE",
      "path": "5"
    },
    "1734": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1736": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "SWAP1",
      "path": "5"
    },
    "1737": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "SWAP2",
      "path": "5"
    },
    "1738": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3000],
      "op": "KECCAK256",
      "path": "5"
    },
    "1739": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3007],
      "op": "DUP1",
      "path": "5"
    },
    "1740": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3007],
      "op": "SLOAD",
      "path": "5"
    },
    "1741": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3007],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6D5"
    },
    "1744": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3007],
      "op": "SWAP1",
      "path": "5"
    },
    "1745": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3007],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5B"
    },
    "1748": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [2986, 3007],
      "op": "JUMP",
      "path": "5"
    },
    "1749": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3007],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1750": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3012],
      "op": "ISZERO",
      "path": "5"
    },
    "1751": {
      "branch": 19,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3012],
      "op": "SWAP1",
      "path": "5"
    },
    "1752": {
      "op": "POP"
    },
    "1753": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3031],
      "op": "DUP1",
      "path": "5"
    },
    "1754": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3031],
      "op": "ISZERO",
      "path": "5"
    },
    "1755": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3031],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E2"
    },
    "1758": {
      "branch": 19,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3031],
      "op": "JUMPI",
      "path": "5"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "branch": 20,
      "fn": "KeyBroadcastContract.vote",
      "offset": [3016, 3031],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1762": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2986, 3031],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1763": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2982, 3078],
      "op": "ISZERO",
      "path": "5"
    },
    "1764": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2982, 3078],
      "op": "PUSH2",
      "path": "5",
      "value": "0x708"
    },
    "1767": {
      "branch": 20,
      "fn": "KeyBroadcastContract.vote",
      "offset": [2982, 3078],
      "op": "JUMPI",
      "path": "5"
    },
    "1768": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x0"
    },
    "1770": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "DUP2",
      "path": "5"
    },
    "1771": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "DUP2",
      "path": "5"
    },
    "1772": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "MSTORE",
      "path": "5"
    },
    "1773": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3052],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1775": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1777": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "SWAP1",
      "path": "5"
    },
    "1778": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "DUP2",
      "path": "5"
    },
    "1779": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "MSTORE",
      "path": "5"
    },
    "1780": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1782": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "SWAP1",
      "path": "5"
    },
    "1783": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "SWAP2",
      "path": "5"
    },
    "1784": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3061],
      "op": "KECCAK256",
      "path": "5"
    },
    "1785": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "DUP6",
      "path": "5"
    },
    "1786": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "MLOAD",
      "path": "5"
    },
    "1787": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "PUSH2",
      "path": "5",
      "value": "0x706"
    },
    "1790": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "SWAP3",
      "path": "5"
    },
    "1791": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "DUP8",
      "path": "5"
    },
    "1792": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "ADD",
      "path": "5"
    },
    "1793": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "SWAP1",
      "path": "5"
    },
    "1794": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "PUSH2",
      "path": "5",
      "value": "0x832"
    },
    "1797": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [3047, 3067],
      "op": "JUMP",
      "path": "5"
    },
    "1798": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1799": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3047, 3067],
      "op": "POP",
      "path": "5"
    },
    "1800": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2982, 3078],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "DUP1",
      "path": "5"
    },
    "1810": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "DUP7",
      "path": "5"
    },
    "1811": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "AND",
      "path": "5"
    },
    "1812": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3110, 3125],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1814": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "SWAP1",
      "path": "5"
    },
    "1815": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "DUP2",
      "path": "5"
    },
    "1816": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "MSTORE",
      "path": "5"
    },
    "1817": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3137],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1819": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1821": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "SWAP1",
      "path": "5"
    },
    "1822": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "DUP2",
      "path": "5"
    },
    "1823": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "MSTORE",
      "path": "5"
    },
    "1824": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1826": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "DUP1",
      "path": "5"
    },
    "1827": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "DUP4",
      "path": "5"
    },
    "1828": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3154],
      "op": "KECCAK256",
      "path": "5"
    },
    "1829": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "DUP6",
      "path": "5"
    },
    "1830": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "DUP5",
      "path": "5"
    },
    "1831": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "MSTORE",
      "path": "5"
    },
    "1832": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "SWAP1",
      "path": "5"
    },
    "1833": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "SWAP2",
      "path": "5"
    },
    "1834": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "MSTORE",
      "path": "5"
    },
    "1835": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "DUP2",
      "path": "5"
    },
    "1836": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "KECCAK256",
      "path": "5"
    },
    "1837": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "SLOAD",
      "path": "5"
    },
    "1838": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3110, 3125],
      "op": "SWAP1",
      "path": "5"
    },
    "1839": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3110, 3125],
      "op": "SWAP2",
      "path": "5"
    },
    "1840": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3167],
      "op": "PUSH2",
      "path": "5",
      "value": "0x73B"
    },
    "1843": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3167],
      "op": "SWAP2",
      "path": "5"
    },
    "1844": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "AND",
      "path": "5"
    },
    "1845": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3163],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1847": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3167],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB24"
    },
    "1850": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [3128, 3167],
      "op": "JUMP",
      "path": "5"
    },
    "1851": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3128, 3167],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "DUP8",
      "path": "5",
      "statement": 10
    },
    "1861": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "DUP2",
      "path": "5"
    },
    "1862": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "AND",
      "path": "5"
    },
    "1863": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1865": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "DUP2",
      "path": "5"
    },
    "1866": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "DUP2",
      "path": "5"
    },
    "1867": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "MSTORE",
      "path": "5"
    },
    "1868": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3215, 3219],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1870": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1872": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "DUP2",
      "path": "5"
    },
    "1873": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "DUP2",
      "path": "5"
    },
    "1874": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "MSTORE",
      "path": "5"
    },
    "1875": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1877": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "DUP1",
      "path": "5"
    },
    "1878": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "DUP5",
      "path": "5"
    },
    "1879": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3200],
      "op": "KECCAK256",
      "path": "5"
    },
    "1880": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3201, 3211],
      "op": "CALLER",
      "path": "5"
    },
    "1881": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3212],
      "op": "DUP6",
      "path": "5"
    },
    "1882": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3212],
      "op": "MSTORE",
      "path": "5"
    },
    "1883": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3212],
      "op": "DUP3",
      "path": "5"
    },
    "1884": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3212],
      "op": "MSTORE",
      "path": "5"
    },
    "1885": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3212],
      "op": "DUP1",
      "path": "5"
    },
    "1886": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3212],
      "op": "DUP5",
      "path": "5"
    },
    "1887": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3212],
      "op": "KECCAK256",
      "path": "5"
    },
    "1888": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "DUP1",
      "path": "5"
    },
    "1889": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "SLOAD",
      "path": "5"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1892": {
      "op": "NOT"
    },
    "1893": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "AND",
      "path": "5"
    },
    "1894": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "SWAP1",
      "path": "5"
    },
    "1895": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "SWAP4",
      "path": "5"
    },
    "1896": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "OR",
      "path": "5"
    },
    "1897": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "SWAP1",
      "path": "5"
    },
    "1898": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "SWAP3",
      "path": "5"
    },
    "1899": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3177, 3219],
      "op": "SSTORE",
      "path": "5"
    },
    "1900": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3255],
      "op": "DUP4",
      "path": "5",
      "statement": 11
    },
    "1901": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3255],
      "op": "DUP4",
      "path": "5"
    },
    "1902": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3255],
      "op": "MSTORE",
      "path": "5"
    },
    "1903": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3238],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1905": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3255],
      "op": "DUP2",
      "path": "5"
    },
    "1906": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3255],
      "op": "MSTORE",
      "path": "5"
    },
    "1907": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3255],
      "op": "DUP2",
      "path": "5"
    },
    "1908": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3255],
      "op": "DUP4",
      "path": "5"
    },
    "1909": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3255],
      "op": "KECCAK256",
      "path": "5"
    },
    "1910": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3264],
      "op": "DUP9",
      "path": "5"
    },
    "1911": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3264],
      "op": "DUP5",
      "path": "5"
    },
    "1912": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3264],
      "op": "MSTORE",
      "path": "5"
    },
    "1913": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3264],
      "op": "DUP2",
      "path": "5"
    },
    "1914": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3264],
      "op": "MSTORE",
      "path": "5"
    },
    "1915": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3264],
      "op": "DUP2",
      "path": "5"
    },
    "1916": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3264],
      "op": "DUP4",
      "path": "5"
    },
    "1917": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3264],
      "op": "KECCAK256",
      "path": "5"
    },
    "1918": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "DUP1",
      "path": "5"
    },
    "1919": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "SLOAD",
      "path": "5"
    },
    "1920": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1929": {
      "op": "NOT"
    },
    "1930": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "AND",
      "path": "5"
    },
    "1931": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "DUP8",
      "path": "5"
    },
    "1932": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "DUP8",
      "path": "5"
    },
    "1933": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "AND",
      "path": "5"
    },
    "1934": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "SWAP1",
      "path": "5"
    },
    "1935": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "DUP2",
      "path": "5"
    },
    "1936": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "OR",
      "path": "5"
    },
    "1937": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "SWAP1",
      "path": "5"
    },
    "1938": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "SWAP2",
      "path": "5"
    },
    "1939": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "SSTORE",
      "path": "5"
    },
    "1940": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "SWAP4",
      "path": "5"
    },
    "1941": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "DUP4",
      "path": "5"
    },
    "1942": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "MSTORE",
      "path": "5"
    },
    "1943": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3317],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1945": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "SWAP1",
      "path": "5"
    },
    "1946": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "MSTORE",
      "path": "5"
    },
    "1947": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "SWAP1",
      "path": "5"
    },
    "1948": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "KECCAK256",
      "path": "5"
    },
    "1949": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "SLOAD",
      "path": "5"
    },
    "1950": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "SWAP3",
      "path": "5"
    },
    "1951": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3229, 3275],
      "op": "SWAP4",
      "path": "5"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "SWAP2",
      "path": "5"
    },
    "1954": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3301, 3334],
      "op": "AND",
      "path": "5"
    },
    "1955": {
      "op": "LT"
    },
    "1956": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3286, 3460],
      "op": "ISZERO",
      "path": "5"
    },
    "1957": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3286, 3460],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7E4"
    },
    "1960": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3286, 3460],
      "op": "JUMPI",
      "path": "5"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1967": {
      "op": "SHL"
    },
    "1968": {
      "op": "SUB"
    },
    "1969": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "DUP7",
      "path": "5",
      "statement": 12
    },
    "1970": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "DUP2",
      "path": "5"
    },
    "1971": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "AND",
      "path": "5"
    },
    "1972": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1974": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "SWAP1",
      "path": "5"
    },
    "1975": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "DUP2",
      "path": "5"
    },
    "1976": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "MSTORE",
      "path": "5"
    },
    "1977": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3366],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1979": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1981": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "SWAP1",
      "path": "5"
    },
    "1982": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "DUP2",
      "path": "5"
    },
    "1983": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "MSTORE",
      "path": "5"
    },
    "1984": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1986": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "DUP1",
      "path": "5"
    },
    "1987": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "DUP4",
      "path": "5"
    },
    "1988": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3383],
      "op": "KECCAK256",
      "path": "5"
    },
    "1989": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "DUP1",
      "path": "5"
    },
    "1990": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "SLOAD",
      "path": "5"
    },
    "1991": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2000": {
      "op": "NOT"
    },
    "2001": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "AND",
      "path": "5"
    },
    "2002": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "SWAP5",
      "path": "5"
    },
    "2003": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "DUP7",
      "path": "5"
    },
    "2004": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "AND",
      "path": "5"
    },
    "2005": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "SWAP5",
      "path": "5"
    },
    "2006": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "SWAP1",
      "path": "5"
    },
    "2007": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "SWAP5",
      "path": "5"
    },
    "2008": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "OR",
      "path": "5"
    },
    "2009": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "SWAP1",
      "path": "5"
    },
    "2010": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "SWAP4",
      "path": "5"
    },
    "2011": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3350, 3394],
      "op": "SSTORE",
      "path": "5"
    },
    "2012": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3408, 3422],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x4"
    },
    "2014": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3408, 3439],
      "op": "SWAP1",
      "path": "5"
    },
    "2015": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3408, 3439],
      "op": "MSTORE",
      "path": "5"
    },
    "2016": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3408, 3439],
      "op": "KECCAK256",
      "path": "5"
    },
    "2017": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3408, 3449],
      "op": "DUP3",
      "path": "5"
    },
    "2018": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3408, 3449],
      "op": "SWAP1",
      "path": "5"
    },
    "2019": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3408, 3449],
      "op": "SSTORE",
      "path": "5"
    },
    "2020": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3286, 3460],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2021": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3503, 3513],
      "op": "CALLER",
      "path": "5",
      "statement": 14
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "op": "SUB"
    },
    "2030": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "AND",
      "path": "5"
    },
    "2031": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "PUSH32",
      "path": "5",
      "value": "0x305124B6EC831BB4150EB1DDBD4E8CC4B95687B9A6258B110FD0E9865914B0BF"
    },
    "2064": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3544, 3559],
      "op": "DUP8",
      "path": "5"
    },
    "2065": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3578, 3581],
      "op": "DUP8",
      "path": "5"
    },
    "2066": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3605, 3613],
      "op": "DUP5",
      "path": "5"
    },
    "2067": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2069": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "MLOAD",
      "path": "5"
    },
    "2070": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "PUSH2",
      "path": "5",
      "value": "0x821"
    },
    "2073": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "SWAP4",
      "path": "5"
    },
    "2074": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "SWAP3",
      "path": "5"
    },
    "2075": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "SWAP2",
      "path": "5"
    },
    "2076": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "SWAP1",
      "path": "5"
    },
    "2077": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAEE"
    },
    "2080": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "i",
      "offset": [3475, 3624],
      "op": "JUMP",
      "path": "5"
    },
    "2081": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2082": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2084": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "MLOAD",
      "path": "5"
    },
    "2085": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "DUP1",
      "path": "5"
    },
    "2086": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "SWAP2",
      "path": "5"
    },
    "2087": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "SUB",
      "path": "5"
    },
    "2088": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "SWAP1",
      "path": "5"
    },
    "2089": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [3475, 3624],
      "op": "LOG2",
      "path": "5"
    },
    "2090": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "POP",
      "path": "5"
    },
    "2091": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "POP",
      "path": "5"
    },
    "2092": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "POP",
      "path": "5"
    },
    "2093": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "POP",
      "path": "5"
    },
    "2094": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "POP",
      "path": "5"
    },
    "2095": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "POP",
      "path": "5"
    },
    "2096": {
      "fn": "KeyBroadcastContract.vote",
      "offset": [2036, 3631],
      "op": "POP",
      "path": "5"
    },
    "2097": {
      "fn": "KeyBroadcastContract.vote",
      "jump": "o",
      "offset": [2036, 3631],
      "op": "JUMP",
      "path": "5"
    },
    "2098": {
      "op": "JUMPDEST"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "DUP1"
    },
    "2101": {
      "op": "SLOAD"
    },
    "2102": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2105": {
      "op": "SWAP1"
    },
    "2106": {
      "op": "PUSH2",
      "value": "0xB5B"
    },
    "2109": {
      "jump": "i",
      "op": "JUMP"
    },
    "2110": {
      "op": "JUMPDEST"
    },
    "2111": {
      "op": "SWAP1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2114": {
      "op": "MSTORE"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2119": {
      "op": "KECCAK256"
    },
    "2120": {
      "op": "SWAP1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2123": {
      "op": "ADD"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2126": {
      "op": "SWAP1"
    },
    "2127": {
      "op": "DIV"
    },
    "2128": {
      "op": "DUP2"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "op": "SWAP3"
    },
    "2131": {
      "op": "DUP3"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x860"
    },
    "2135": {
      "op": "JUMPI"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2138": {
      "op": "DUP6"
    },
    "2139": {
      "op": "SSTORE"
    },
    "2140": {
      "op": "PUSH2",
      "value": "0x8A6"
    },
    "2143": {
      "op": "JUMP"
    },
    "2144": {
      "op": "JUMPDEST"
    },
    "2145": {
      "op": "DUP3"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2148": {
      "op": "LT"
    },
    "2149": {
      "op": "PUSH2",
      "value": "0x879"
    },
    "2152": {
      "op": "JUMPI"
    },
    "2153": {
      "op": "DUP1"
    },
    "2154": {
      "op": "MLOAD"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2157": {
      "op": "NOT"
    },
    "2158": {
      "op": "AND"
    },
    "2159": {
      "op": "DUP4"
    },
    "2160": {
      "op": "DUP1"
    },
    "2161": {
      "op": "ADD"
    },
    "2162": {
      "op": "OR"
    },
    "2163": {
      "op": "DUP6"
    },
    "2164": {
      "op": "SSTORE"
    },
    "2165": {
      "op": "PUSH2",
      "value": "0x8A6"
    },
    "2168": {
      "op": "JUMP"
    },
    "2169": {
      "op": "JUMPDEST"
    },
    "2170": {
      "op": "DUP3"
    },
    "2171": {
      "op": "DUP1"
    },
    "2172": {
      "op": "ADD"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "ADD"
    },
    "2176": {
      "op": "DUP6"
    },
    "2177": {
      "op": "SSTORE"
    },
    "2178": {
      "op": "DUP3"
    },
    "2179": {
      "op": "ISZERO"
    },
    "2180": {
      "op": "PUSH2",
      "value": "0x8A6"
    },
    "2183": {
      "op": "JUMPI"
    },
    "2184": {
      "op": "SWAP2"
    },
    "2185": {
      "op": "DUP3"
    },
    "2186": {
      "op": "ADD"
    },
    "2187": {
      "op": "JUMPDEST"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "DUP2"
    },
    "2190": {
      "op": "GT"
    },
    "2191": {
      "op": "ISZERO"
    },
    "2192": {
      "op": "PUSH2",
      "value": "0x8A6"
    },
    "2195": {
      "op": "JUMPI"
    },
    "2196": {
      "op": "DUP3"
    },
    "2197": {
      "op": "MLOAD"
    },
    "2198": {
      "op": "DUP3"
    },
    "2199": {
      "op": "SSTORE"
    },
    "2200": {
      "op": "SWAP2"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2203": {
      "op": "ADD"
    },
    "2204": {
      "op": "SWAP2"
    },
    "2205": {
      "op": "SWAP1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "op": "SWAP1"
    },
    "2210": {
      "op": "PUSH2",
      "value": "0x88B"
    },
    "2213": {
      "op": "JUMP"
    },
    "2214": {
      "op": "JUMPDEST"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "op": "PUSH2",
      "value": "0x8B2"
    },
    "2219": {
      "op": "SWAP3"
    },
    "2220": {
      "op": "SWAP2"
    },
    "2221": {
      "op": "POP"
    },
    "2222": {
      "op": "PUSH2",
      "value": "0x8B6"
    },
    "2225": {
      "jump": "i",
      "op": "JUMP"
    },
    "2226": {
      "op": "JUMPDEST"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "op": "SWAP1"
    },
    "2229": {
      "jump": "o",
      "op": "JUMP"
    },
    "2230": {
      "op": "JUMPDEST"
    },
    "2231": {
      "op": "JUMPDEST"
    },
    "2232": {
      "op": "DUP1"
    },
    "2233": {
      "op": "DUP3"
    },
    "2234": {
      "op": "GT"
    },
    "2235": {
      "op": "ISZERO"
    },
    "2236": {
      "op": "PUSH2",
      "value": "0x8B2"
    },
    "2239": {
      "op": "JUMPI"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2242": {
      "op": "DUP2"
    },
    "2243": {
      "op": "SSTORE"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "PUSH2",
      "value": "0x8B7"
    },
    "2250": {
      "op": "JUMP"
    },
    "2251": {
      "op": "JUMPDEST"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2254": {
      "op": "DUP3"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2257": {
      "op": "DUP4"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "SLT"
    },
    "2260": {
      "op": "PUSH2",
      "value": "0x8DB"
    },
    "2263": {
      "op": "JUMPI"
    },
    "2264": {
      "op": "DUP1"
    },
    "2265": {
      "op": "DUP2"
    },
    "2266": {
      "op": "REVERT"
    },
    "2267": {
      "op": "JUMPDEST"
    },
    "2268": {
      "op": "DUP2"
    },
    "2269": {
      "op": "CALLDATALOAD"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2276": {
      "op": "SHL"
    },
    "2277": {
      "op": "SUB"
    },
    "2278": {
      "op": "DUP1"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "GT"
    },
    "2281": {
      "op": "ISZERO"
    },
    "2282": {
      "op": "PUSH2",
      "value": "0x8F5"
    },
    "2285": {
      "op": "JUMPI"
    },
    "2286": {
      "op": "PUSH2",
      "value": "0x8F5"
    },
    "2289": {
      "op": "PUSH2",
      "value": "0xB96"
    },
    "2292": {
      "jump": "i",
      "op": "JUMP"
    },
    "2293": {
      "op": "JUMPDEST"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2296": {
      "op": "MLOAD"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2299": {
      "op": "DUP4"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2303": {
      "op": "NOT"
    },
    "2304": {
      "op": "SWAP1"
    },
    "2305": {
      "op": "DUP2"
    },
    "2306": {
      "op": "AND"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "op": "AND"
    },
    "2311": {
      "op": "DUP2"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "SWAP1"
    },
    "2314": {
      "op": "DUP3"
    },
    "2315": {
      "op": "DUP3"
    },
    "2316": {
      "op": "GT"
    },
    "2317": {
      "op": "DUP2"
    },
    "2318": {
      "op": "DUP4"
    },
    "2319": {
      "op": "LT"
    },
    "2320": {
      "op": "OR"
    },
    "2321": {
      "op": "ISZERO"
    },
    "2322": {
      "op": "PUSH2",
      "value": "0x91D"
    },
    "2325": {
      "op": "JUMPI"
    },
    "2326": {
      "op": "PUSH2",
      "value": "0x91D"
    },
    "2329": {
      "op": "PUSH2",
      "value": "0xB96"
    },
    "2332": {
      "jump": "i",
      "op": "JUMP"
    },
    "2333": {
      "op": "JUMPDEST"
    },
    "2334": {
      "op": "DUP2"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "DUP4"
    },
    "2339": {
      "op": "DUP2"
    },
    "2340": {
      "op": "MSTORE"
    },
    "2341": {
      "op": "DUP7"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2344": {
      "op": "DUP6"
    },
    "2345": {
      "op": "DUP9"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "op": "GT"
    },
    "2349": {
      "op": "ISZERO"
    },
    "2350": {
      "op": "PUSH2",
      "value": "0x935"
    },
    "2353": {
      "op": "JUMPI"
    },
    "2354": {
      "op": "DUP5"
    },
    "2355": {
      "op": "DUP6"
    },
    "2356": {
      "op": "REVERT"
    },
    "2357": {
      "op": "JUMPDEST"
    },
    "2358": {
      "op": "DUP4"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2361": {
      "op": "DUP8"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2365": {
      "op": "DUP4"
    },
    "2366": {
      "op": "ADD"
    },
    "2367": {
      "op": "CALLDATACOPY"
    },
    "2368": {
      "op": "SWAP3"
    },
    "2369": {
      "op": "DUP4"
    },
    "2370": {
      "op": "ADD"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2373": {
      "op": "ADD"
    },
    "2374": {
      "op": "SWAP4"
    },
    "2375": {
      "op": "SWAP1"
    },
    "2376": {
      "op": "SWAP4"
    },
    "2377": {
      "op": "MSTORE"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "op": "SWAP4"
    },
    "2380": {
      "op": "SWAP3"
    },
    "2381": {
      "op": "POP"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "jump": "o",
      "op": "JUMP"
    },
    "2385": {
      "op": "JUMPDEST"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2390": {
      "op": "DUP3"
    },
    "2391": {
      "op": "DUP5"
    },
    "2392": {
      "op": "SUB"
    },
    "2393": {
      "op": "SLT"
    },
    "2394": {
      "op": "ISZERO"
    },
    "2395": {
      "op": "PUSH2",
      "value": "0x962"
    },
    "2398": {
      "op": "JUMPI"
    },
    "2399": {
      "op": "DUP1"
    },
    "2400": {
      "op": "DUP2"
    },
    "2401": {
      "op": "REVERT"
    },
    "2402": {
      "op": "JUMPDEST"
    },
    "2403": {
      "op": "DUP2"
    },
    "2404": {
      "op": "MLOAD"
    },
    "2405": {
      "op": "PUSH2",
      "value": "0x96D"
    },
    "2408": {
      "op": "DUP2"
    },
    "2409": {
      "op": "PUSH2",
      "value": "0xBAC"
    },
    "2412": {
      "jump": "i",
      "op": "JUMP"
    },
    "2413": {
      "op": "JUMPDEST"
    },
    "2414": {
      "op": "SWAP4"
    },
    "2415": {
      "op": "SWAP3"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "op": "POP"
    },
    "2419": {
      "jump": "o",
      "op": "JUMP"
    },
    "2420": {
      "op": "JUMPDEST"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2423": {
      "op": "DUP1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2426": {
      "op": "DUP4"
    },
    "2427": {
      "op": "DUP6"
    },
    "2428": {
      "op": "SUB"
    },
    "2429": {
      "op": "SLT"
    },
    "2430": {
      "op": "ISZERO"
    },
    "2431": {
      "op": "PUSH2",
      "value": "0x986"
    },
    "2434": {
      "op": "JUMPI"
    },
    "2435": {
      "op": "DUP1"
    },
    "2436": {
      "op": "DUP2"
    },
    "2437": {
      "op": "REVERT"
    },
    "2438": {
      "op": "JUMPDEST"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "CALLDATALOAD"
    },
    "2441": {
      "op": "PUSH2",
      "value": "0x991"
    },
    "2444": {
      "op": "DUP2"
    },
    "2445": {
      "op": "PUSH2",
      "value": "0xBAC"
    },
    "2448": {
      "jump": "i",
      "op": "JUMP"
    },
    "2449": {
      "op": "JUMPDEST"
    },
    "2450": {
      "op": "SWAP2"
    },
    "2451": {
      "op": "POP"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2454": {
      "op": "DUP4"
    },
    "2455": {
      "op": "ADD"
    },
    "2456": {
      "op": "CALLDATALOAD"
    },
    "2457": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "2460": {
      "op": "DUP2"
    },
    "2461": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "2464": {
      "jump": "i",
      "op": "JUMP"
    },
    "2465": {
      "op": "JUMPDEST"
    },
    "2466": {
      "op": "DUP1"
    },
    "2467": {
      "op": "SWAP2"
    },
    "2468": {
      "op": "POP"
    },
    "2469": {
      "op": "POP"
    },
    "2470": {
      "op": "SWAP3"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "op": "SWAP3"
    },
    "2473": {
      "op": "SWAP1"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "jump": "o",
      "op": "JUMP"
    },
    "2476": {
      "op": "JUMPDEST"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2481": {
      "op": "DUP3"
    },
    "2482": {
      "op": "DUP5"
    },
    "2483": {
      "op": "SUB"
    },
    "2484": {
      "op": "SLT"
    },
    "2485": {
      "op": "ISZERO"
    },
    "2486": {
      "op": "PUSH2",
      "value": "0x9BD"
    },
    "2489": {
      "op": "JUMPI"
    },
    "2490": {
      "op": "DUP1"
    },
    "2491": {
      "op": "DUP2"
    },
    "2492": {
      "op": "REVERT"
    },
    "2493": {
      "op": "JUMPDEST"
    },
    "2494": {
      "op": "DUP2"
    },
    "2495": {
      "op": "CALLDATALOAD"
    },
    "2496": {
      "op": "PUSH2",
      "value": "0x96D"
    },
    "2499": {
      "op": "DUP2"
    },
    "2500": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "2503": {
      "jump": "i",
      "op": "JUMP"
    },
    "2504": {
      "op": "JUMPDEST"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2509": {
      "op": "DUP3"
    },
    "2510": {
      "op": "DUP5"
    },
    "2511": {
      "op": "SUB"
    },
    "2512": {
      "op": "SLT"
    },
    "2513": {
      "op": "ISZERO"
    },
    "2514": {
      "op": "PUSH2",
      "value": "0x9D9"
    },
    "2517": {
      "op": "JUMPI"
    },
    "2518": {
      "op": "DUP1"
    },
    "2519": {
      "op": "DUP2"
    },
    "2520": {
      "op": "REVERT"
    },
    "2521": {
      "op": "JUMPDEST"
    },
    "2522": {
      "op": "DUP2"
    },
    "2523": {
      "op": "MLOAD"
    },
    "2524": {
      "op": "PUSH2",
      "value": "0x96D"
    },
    "2527": {
      "op": "DUP2"
    },
    "2528": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "2531": {
      "jump": "i",
      "op": "JUMP"
    },
    "2532": {
      "op": "JUMPDEST"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2535": {
      "op": "DUP1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2538": {
      "op": "DUP4"
    },
    "2539": {
      "op": "DUP6"
    },
    "2540": {
      "op": "SUB"
    },
    "2541": {
      "op": "SLT"
    },
    "2542": {
      "op": "ISZERO"
    },
    "2543": {
      "op": "PUSH2",
      "value": "0x9F6"
    },
    "2546": {
      "op": "JUMPI"
    },
    "2547": {
      "op": "DUP2"
    },
    "2548": {
      "op": "DUP3"
    },
    "2549": {
      "op": "REVERT"
    },
    "2550": {
      "op": "JUMPDEST"
    },
    "2551": {
      "op": "DUP3"
    },
    "2552": {
      "op": "CALLDATALOAD"
    },
    "2553": {
      "op": "PUSH2",
      "value": "0xA01"
    },
    "2556": {
      "op": "DUP2"
    },
    "2557": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "2560": {
      "jump": "i",
      "op": "JUMP"
    },
    "2561": {
      "op": "JUMPDEST"
    },
    "2562": {
      "op": "SWAP2"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2566": {
      "op": "DUP4"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "op": "CALLDATALOAD"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "op": "SUB"
    },
    "2577": {
      "op": "DUP2"
    },
    "2578": {
      "op": "GT"
    },
    "2579": {
      "op": "ISZERO"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0xA1B"
    },
    "2583": {
      "op": "JUMPI"
    },
    "2584": {
      "op": "DUP2"
    },
    "2585": {
      "op": "DUP3"
    },
    "2586": {
      "op": "REVERT"
    },
    "2587": {
      "op": "JUMPDEST"
    },
    "2588": {
      "op": "PUSH2",
      "value": "0xA27"
    },
    "2591": {
      "op": "DUP6"
    },
    "2592": {
      "op": "DUP3"
    },
    "2593": {
      "op": "DUP7"
    },
    "2594": {
      "op": "ADD"
    },
    "2595": {
      "op": "PUSH2",
      "value": "0x8CB"
    },
    "2598": {
      "jump": "i",
      "op": "JUMP"
    },
    "2599": {
      "op": "JUMPDEST"
    },
    "2600": {
      "op": "SWAP2"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "op": "POP"
    },
    "2603": {
      "op": "SWAP3"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "op": "SWAP3"
    },
    "2606": {
      "op": "SWAP1"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "jump": "o",
      "op": "JUMP"
    },
    "2609": {
      "op": "JUMPDEST"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2612": {
      "op": "DUP1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2617": {
      "op": "DUP5"
    },
    "2618": {
      "op": "DUP7"
    },
    "2619": {
      "op": "SUB"
    },
    "2620": {
      "op": "SLT"
    },
    "2621": {
      "op": "ISZERO"
    },
    "2622": {
      "op": "PUSH2",
      "value": "0xA45"
    },
    "2625": {
      "op": "JUMPI"
    },
    "2626": {
      "op": "DUP1"
    },
    "2627": {
      "op": "DUP2"
    },
    "2628": {
      "op": "REVERT"
    },
    "2629": {
      "op": "JUMPDEST"
    },
    "2630": {
      "op": "DUP4"
    },
    "2631": {
      "op": "CALLDATALOAD"
    },
    "2632": {
      "op": "PUSH2",
      "value": "0xA50"
    },
    "2635": {
      "op": "DUP2"
    },
    "2636": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "2639": {
      "jump": "i",
      "op": "JUMP"
    },
    "2640": {
      "op": "JUMPDEST"
    },
    "2641": {
      "op": "SWAP3"
    },
    "2642": {
      "op": "POP"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2645": {
      "op": "DUP5"
    },
    "2646": {
      "op": "ADD"
    },
    "2647": {
      "op": "CALLDATALOAD"
    },
    "2648": {
      "op": "PUSH2",
      "value": "0xA60"
    },
    "2651": {
      "op": "DUP2"
    },
    "2652": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "2655": {
      "jump": "i",
      "op": "JUMP"
    },
    "2656": {
      "op": "JUMPDEST"
    },
    "2657": {
      "op": "SWAP2"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2661": {
      "op": "DUP5"
    },
    "2662": {
      "op": "ADD"
    },
    "2663": {
      "op": "CALLDATALOAD"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2670": {
      "op": "SHL"
    },
    "2671": {
      "op": "SUB"
    },
    "2672": {
      "op": "DUP2"
    },
    "2673": {
      "op": "GT"
    },
    "2674": {
      "op": "ISZERO"
    },
    "2675": {
      "op": "PUSH2",
      "value": "0xA7A"
    },
    "2678": {
      "op": "JUMPI"
    },
    "2679": {
      "op": "DUP2"
    },
    "2680": {
      "op": "DUP3"
    },
    "2681": {
      "op": "REVERT"
    },
    "2682": {
      "op": "JUMPDEST"
    },
    "2683": {
      "op": "PUSH2",
      "value": "0xA86"
    },
    "2686": {
      "op": "DUP7"
    },
    "2687": {
      "op": "DUP3"
    },
    "2688": {
      "op": "DUP8"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "PUSH2",
      "value": "0x8CB"
    },
    "2693": {
      "jump": "i",
      "op": "JUMP"
    },
    "2694": {
      "op": "JUMPDEST"
    },
    "2695": {
      "op": "SWAP2"
    },
    "2696": {
      "op": "POP"
    },
    "2697": {
      "op": "POP"
    },
    "2698": {
      "op": "SWAP3"
    },
    "2699": {
      "op": "POP"
    },
    "2700": {
      "op": "SWAP3"
    },
    "2701": {
      "op": "POP"
    },
    "2702": {
      "op": "SWAP3"
    },
    "2703": {
      "jump": "o",
      "op": "JUMP"
    },
    "2704": {
      "op": "JUMPDEST"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2707": {
      "op": "DUP2"
    },
    "2708": {
      "op": "MLOAD"
    },
    "2709": {
      "op": "DUP1"
    },
    "2710": {
      "op": "DUP5"
    },
    "2711": {
      "op": "MSTORE"
    },
    "2712": {
      "op": "DUP2"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "DUP2"
    },
    "2715": {
      "op": "DUP2"
    },
    "2716": {
      "op": "LT"
    },
    "2717": {
      "op": "ISZERO"
    },
    "2718": {
      "op": "PUSH2",
      "value": "0xAB5"
    },
    "2721": {
      "op": "JUMPI"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2724": {
      "op": "DUP2"
    },
    "2725": {
      "op": "DUP6"
    },
    "2726": {
      "op": "ADD"
    },
    "2727": {
      "op": "DUP2"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "MLOAD"
    },
    "2730": {
      "op": "DUP7"
    },
    "2731": {
      "op": "DUP4"
    },
    "2732": {
      "op": "ADD"
    },
    "2733": {
      "op": "DUP3"
    },
    "2734": {
      "op": "ADD"
    },
    "2735": {
      "op": "MSTORE"
    },
    "2736": {
      "op": "ADD"
    },
    "2737": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "2740": {
      "op": "JUMP"
    },
    "2741": {
      "op": "JUMPDEST"
    },
    "2742": {
      "op": "DUP2"
    },
    "2743": {
      "op": "DUP2"
    },
    "2744": {
      "op": "GT"
    },
    "2745": {
      "op": "ISZERO"
    },
    "2746": {
      "op": "PUSH2",
      "value": "0xAC6"
    },
    "2749": {
      "op": "JUMPI"
    },
    "2750": {
      "op": "DUP3"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2753": {
      "op": "DUP4"
    },
    "2754": {
      "op": "DUP8"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "ADD"
    },
    "2757": {
      "op": "MSTORE"
    },
    "2758": {
      "op": "JUMPDEST"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2762": {
      "op": "ADD"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2765": {
      "op": "NOT"
    },
    "2766": {
      "op": "AND"
    },
    "2767": {
      "op": "SWAP3"
    },
    "2768": {
      "op": "SWAP1"
    },
    "2769": {
      "op": "SWAP3"
    },
    "2770": {
      "op": "ADD"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2773": {
      "op": "ADD"
    },
    "2774": {
      "op": "SWAP3"
    },
    "2775": {
      "op": "SWAP2"
    },
    "2776": {
      "op": "POP"
    },
    "2777": {
      "op": "POP"
    },
    "2778": {
      "jump": "o",
      "op": "JUMP"
    },
    "2779": {
      "op": "JUMPDEST"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2782": {
      "op": "DUP2"
    },
    "2783": {
      "op": "MSTORE"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2786": {
      "op": "PUSH2",
      "value": "0x96D"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2791": {
      "op": "DUP4"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "DUP5"
    },
    "2794": {
      "op": "PUSH2",
      "value": "0xA90"
    },
    "2797": {
      "jump": "i",
      "op": "JUMP"
    },
    "2798": {
      "op": "JUMPDEST"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "op": "SUB"
    },
    "2809": {
      "op": "DUP1"
    },
    "2810": {
      "op": "DUP7"
    },
    "2811": {
      "op": "AND"
    },
    "2812": {
      "op": "DUP4"
    },
    "2813": {
      "op": "MSTORE"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2818": {
      "op": "DUP5"
    },
    "2819": {
      "op": "ADD"
    },
    "2820": {
      "op": "MSTORE"
    },
    "2821": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2826": {
      "op": "DUP5"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "op": "DUP7"
    },
    "2829": {
      "op": "PUSH2",
      "value": "0xA90"
    },
    "2832": {
      "jump": "i",
      "op": "JUMP"
    },
    "2833": {
      "op": "JUMPDEST"
    },
    "2834": {
      "op": "SWAP2"
    },
    "2835": {
      "op": "POP"
    },
    "2836": {
      "op": "DUP1"
    },
    "2837": {
      "op": "DUP5"
    },
    "2838": {
      "op": "AND"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2841": {
      "op": "DUP5"
    },
    "2842": {
      "op": "ADD"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "op": "SWAP5"
    },
    "2846": {
      "op": "SWAP4"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "op": "POP"
    },
    "2849": {
      "op": "POP"
    },
    "2850": {
      "op": "POP"
    },
    "2851": {
      "jump": "o",
      "op": "JUMP"
    },
    "2852": {
      "op": "JUMPDEST"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2861": {
      "op": "SHL"
    },
    "2862": {
      "op": "SUB"
    },
    "2863": {
      "op": "DUP1"
    },
    "2864": {
      "op": "DUP4"
    },
    "2865": {
      "op": "AND"
    },
    "2866": {
      "op": "DUP2"
    },
    "2867": {
      "op": "DUP6"
    },
    "2868": {
      "op": "AND"
    },
    "2869": {
      "op": "DUP1"
    },
    "2870": {
      "op": "DUP4"
    },
    "2871": {
      "op": "SUB"
    },
    "2872": {
      "op": "DUP3"
    },
    "2873": {
      "op": "GT"
    },
    "2874": {
      "op": "ISZERO"
    },
    "2875": {
      "op": "PUSH2",
      "value": "0xB52"
    },
    "2878": {
      "op": "JUMPI"
    },
    "2879": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "op": "DUP5"
    },
    "2888": {
      "op": "MSTORE"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2893": {
      "op": "MSTORE"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2896": {
      "op": "DUP5"
    },
    "2897": {
      "op": "REVERT"
    },
    "2898": {
      "op": "JUMPDEST"
    },
    "2899": {
      "op": "ADD"
    },
    "2900": {
      "op": "SWAP5"
    },
    "2901": {
      "op": "SWAP4"
    },
    "2902": {
      "op": "POP"
    },
    "2903": {
      "op": "POP"
    },
    "2904": {
      "op": "POP"
    },
    "2905": {
      "op": "POP"
    },
    "2906": {
      "jump": "o",
      "op": "JUMP"
    },
    "2907": {
      "op": "JUMPDEST"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2910": {
      "op": "DUP2"
    },
    "2911": {
      "op": "DUP2"
    },
    "2912": {
      "op": "SHR"
    },
    "2913": {
      "op": "SWAP1"
    },
    "2914": {
      "op": "DUP3"
    },
    "2915": {
      "op": "AND"
    },
    "2916": {
      "op": "DUP1"
    },
    "2917": {
      "op": "PUSH2",
      "value": "0xB6F"
    },
    "2920": {
      "op": "JUMPI"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2923": {
      "op": "DUP3"
    },
    "2924": {
      "op": "AND"
    },
    "2925": {
      "op": "SWAP2"
    },
    "2926": {
      "op": "POP"
    },
    "2927": {
      "op": "JUMPDEST"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2930": {
      "op": "DUP3"
    },
    "2931": {
      "op": "LT"
    },
    "2932": {
      "op": "DUP2"
    },
    "2933": {
      "op": "EQ"
    },
    "2934": {
      "op": "ISZERO"
    },
    "2935": {
      "op": "PUSH2",
      "value": "0xB90"
    },
    "2938": {
      "op": "JUMPI"
    },
    "2939": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2946": {
      "op": "SHL"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2949": {
      "op": "MSTORE"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2954": {
      "op": "MSTORE"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2959": {
      "op": "REVERT"
    },
    "2960": {
      "op": "JUMPDEST"
    },
    "2961": {
      "op": "POP"
    },
    "2962": {
      "op": "SWAP2"
    },
    "2963": {
      "op": "SWAP1"
    },
    "2964": {
      "op": "POP"
    },
    "2965": {
      "jump": "o",
      "op": "JUMP"
    },
    "2966": {
      "op": "JUMPDEST"
    },
    "2967": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2974": {
      "op": "SHL"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2977": {
      "op": "MSTORE"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2982": {
      "op": "MSTORE"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2987": {
      "op": "REVERT"
    },
    "2988": {
      "op": "JUMPDEST"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "op": "SUB"
    },
    "2997": {
      "op": "DUP2"
    },
    "2998": {
      "op": "AND"
    },
    "2999": {
      "op": "DUP2"
    },
    "3000": {
      "op": "EQ"
    },
    "3001": {
      "op": "PUSH2",
      "value": "0xBC1"
    },
    "3004": {
      "op": "JUMPI"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3007": {
      "op": "DUP1"
    },
    "3008": {
      "op": "REVERT"
    },
    "3009": {
      "op": "JUMPDEST"
    },
    "3010": {
      "op": "POP"
    },
    "3011": {
      "jump": "o",
      "op": "JUMP"
    },
    "3012": {
      "op": "JUMPDEST"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "op": "SUB"
    },
    "3021": {
      "op": "DUP2"
    },
    "3022": {
      "op": "AND"
    },
    "3023": {
      "op": "DUP2"
    },
    "3024": {
      "op": "EQ"
    },
    "3025": {
      "op": "PUSH2",
      "value": "0xBC1"
    },
    "3028": {
      "op": "JUMPI"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3031": {
      "op": "DUP1"
    },
    "3032": {
      "op": "REVERT"
    }
  },
  "sha1": "e41a9d99b7ca3010af7df82f26b04749fe36ec9f",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.4;\n\nimport {ConfigContract, BatchConfig} from \"./ConfigContract.sol\";\n\n/// @title A contract that keypers can use to vote on eon public keys. For each eon public key\n///     generated, the keypers are expected to submit one vote. The contract logs the number of\n///     votes so that users can only pick keys once they have reached votes from enough keypers\n///     and thus have confidence that the key is actually correct.\ncontract KeyBroadcastContract {\n    /// @notice The event emitted when a keyper voted on an eon key.\n    /// @param keyper The address of the keyper who sent the vote.\n    /// @param startBatchIndex The index of the first batch for which the key should be used.\n    /// @param key The eon public key for which the keyper voted.\n    /// @param numVotes The number of keypers (including this one) who have voted for the key so\n    ///     far.\n    event Voted(\n        address indexed keyper,\n        uint64 startBatchIndex,\n        bytes key,\n        uint64 numVotes\n    );\n\n    ConfigContract public configContract;\n    mapping(uint64 => mapping(address => bool)) private _voted; // start batch index => keyper => voted or not\n    mapping(uint64 => mapping(bytes32 => uint64)) private _numVotes; // start batch index => key hash => number of votes\n    mapping(bytes32 => bytes) private _keys; // key hash => key\n\n    mapping(uint64 => bytes32) private _bestKeyHashes;\n    mapping(uint64 => uint64) private _bestKeyNumVotes;\n\n    constructor(address configContractAddress) {\n        configContract = ConfigContract(configContractAddress);\n    }\n\n    /// @notice Submit a vote.\n    /// @notice Can only be called by keypers defined in the config responsible for\n    ///     `startBatchIndex`, and only once per `startBatchIndex`.\n    /// @param keyperIndex The index of the calling keyper in the batch config.\n    /// @param startBatchIndex The index of the first batch for which the key should be used.\n    /// @param key The eon public key to vote for.\n    function vote(\n        uint64 keyperIndex,\n        uint64 startBatchIndex,\n        bytes memory key\n    ) public {\n        uint64 configIndex =\n            configContract.configIndexForBatchIndex(startBatchIndex);\n        uint64 batchSpan = configContract.configBatchSpan(configIndex);\n\n        require(batchSpan > 0, \"KeyBroadcastContract: config is inactive\");\n\n        require(\n            keyperIndex < configContract.configNumKeypers(configIndex),\n            \"KeyBroadcastContract: keyper index out of range\"\n        );\n        require(\n            msg.sender ==\n                configContract.configKeypers(configIndex, keyperIndex),\n            \"KeyBroadcastContract: sender is not keyper\"\n        );\n\n        require(\n            !_voted[startBatchIndex][msg.sender],\n            \"KeyBroadcastContract: keyper has already voted\"\n        );\n\n        bytes32 keyHash = keccak256(key);\n        // store the key if it hasn't already\n        if (_keys[keyHash].length == 0 && key.length >= 0) {\n            _keys[keyHash] = key;\n        }\n\n        // count vote\n        uint64 numVotes = _numVotes[startBatchIndex][keyHash] + 1;\n        _voted[startBatchIndex][msg.sender] = true;\n        _numVotes[startBatchIndex][keyHash] = numVotes;\n\n        if (numVotes > _bestKeyNumVotes[startBatchIndex]) {\n            _bestKeyNumVotes[startBatchIndex] = numVotes;\n            _bestKeyHashes[startBatchIndex] = keyHash;\n        }\n\n        emit Voted({\n            keyper: msg.sender,\n            startBatchIndex: startBatchIndex,\n            key: key,\n            numVotes: numVotes\n        });\n    }\n\n    function hasVoted(address keyper, uint64 startBatchIndex)\n        public\n        view\n        returns (bool)\n    {\n        return _voted[startBatchIndex][keyper];\n    }\n\n    function getNumVotes(uint64 startBatchIndex, bytes memory key)\n        public\n        view\n        returns (uint64)\n    {\n        return _numVotes[startBatchIndex][keccak256(key)];\n    }\n\n    function getBestKeyHash(uint64 startBatchIndex)\n        public\n        view\n        returns (bytes32)\n    {\n        return _bestKeyHashes[startBatchIndex];\n    }\n\n    function getBestKey(uint64 startBatchIndex)\n        public\n        view\n        returns (bytes memory)\n    {\n        return _keys[_bestKeyHashes[startBatchIndex]];\n    }\n\n    function getBestKeyNumVotes(uint64 startBatchIndex)\n        public\n        view\n        returns (uint256)\n    {\n        return _bestKeyNumVotes[startBatchIndex];\n    }\n}\n",
  "sourceMap": "479:4035:5:-:0;;;1508:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1561:14;:54;;-1:-1:-1;;;;;;1561:54:5;-1:-1:-1;;;;;1561:54:5;;;;;;;;;;479:4035;;14:310:23;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:23;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:23:o;:::-;479:4035:5;;;;;;",
  "sourcePath": "contracts/KeyBroadcastContract.sol",
  "type": "contract"
}
